{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\tester.js\";\nimport InfiniteLoader from 'react-infinite-loader';\nimport ReactDOM from 'react-dom';\nimport React, { Component, PropTypes } from 'react';\nimport VacancyCard from \"./vacancyCard\";\nimport deloitte from \"../images/deloitte.png\";\nimport procredit from \"../images/procredit.png\";\nimport fozzy from \"../images/img.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TestComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        id: 1,\n        title: \"Менеджер з комунікацій\",\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: deloitte\n      }, {\n        id: 2,\n        title: 'Менеджер з комунікацій',\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: procredit\n      }, {\n        id: 3,\n        title: 'Менеджер з комунікацій',\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: fozzy\n      }, {\n        id: 4,\n        title: \"Менеджер з комунікацій\",\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: deloitte\n      }, {\n        id: 5,\n        title: 'Менеджер з комунікацій',\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: procredit\n      }, {\n        id: 6,\n        title: 'Менеджер з комунікацій',\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: fozzy\n      }, {\n        id: 7,\n        title: \"Менеджер з комунікацій\",\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: deloitte\n      }, {\n        id: 8,\n        title: 'Менеджер з комунікацій',\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: procredit\n      }, {\n        id: 9,\n        title: 'Менеджер з комунікацій',\n        description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n        company: \"Deloitte\",\n        logo: fozzy\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.loadItems();\n  }\n\n  loadItems() {\n    /* just simulating a load of more items from an api here */\n    setTimeout(() => {\n      let items = this.state.items.slice();\n      items = items.concat(this.getItems());\n      this.setState({\n        items: items\n      });\n    }, 1000);\n  }\n\n  handleVisit() {\n    this.loadItems();\n  }\n\n  getItems() {\n    let items = [];\n\n    for (var i = 0; i < 10; i++) {\n      items.push({\n        name: 'An item'\n      });\n    }\n\n    return items;\n  }\n\n  renderCards() {\n    const cards = state.vacancies.map(function (vacancy, i) {\n      return /*#__PURE__*/_jsxDEV(VacancyCard, {\n        title: vacancy.title,\n        description: vacancy.description,\n        company: vacancy.company,\n        logo: vacancy.logo\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    });\n    return cards;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderCards(), /*#__PURE__*/_jsxDEV(InfiniteLoader, {\n        onVisited: () => this.handleVisit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/tester.js"],"names":["InfiniteLoader","ReactDOM","React","Component","PropTypes","VacancyCard","deloitte","procredit","fozzy","TestComponent","constructor","props","state","items","id","title","description","company","logo","componentDidMount","loadItems","setTimeout","slice","concat","getItems","setState","handleVisit","i","push","name","renderCards","cards","vacancies","map","vacancy","render"],"mappings":"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","sourcesContent":["import InfiniteLoader from 'react-infinite-loader'\r\nimport ReactDOM from 'react-dom'\r\nimport React, { Component, PropTypes } from 'react'\r\nimport VacancyCard from \"./vacancyCard\";\r\nimport deloitte from \"../images/deloitte.png\"\r\nimport procredit from \"../images/procredit.png\"\r\nimport fozzy from \"../images/img.png\"\r\n\r\nexport default class TestComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [\r\n                {id: 1, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n                {id: 2, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n                {id: 3, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n                {id: 4, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n                {id: 5, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n                {id: 6, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n                {id: 7, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n                {id: 8, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n                {id: 9, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n            ],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadItems()\r\n    }\r\n\r\n    loadItems() {\r\n        /* just simulating a load of more items from an api here */\r\n        setTimeout( () => {\r\n            let items = this.state.items.slice()\r\n            items = items.concat(this.getItems())\r\n            this.setState({ items: items })\r\n        }, 1000)\r\n    }\r\n\r\n    handleVisit () {\r\n        this.loadItems()\r\n    }\r\n\r\n    getItems() {\r\n        let items = []\r\n        for(var i = 0; i < 10; i++) {\r\n            items.push({ name: 'An item' })\r\n        }\r\n        return items\r\n    }\r\n\r\n    renderCards() {\r\n        const cards = state.vacancies.map(function(vacancy, i){\r\n            return (\r\n                <VacancyCard\r\n                    key={i}\r\n                    title={vacancy.title}\r\n                    description={vacancy.description}\r\n                    company={vacancy.company}\r\n                    logo={vacancy.logo}\r\n                />\r\n            )\r\n        })\r\n        return cards\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                { this.renderCards() }\r\n                <InfiniteLoader onVisited={ () => this.handleVisit() } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}