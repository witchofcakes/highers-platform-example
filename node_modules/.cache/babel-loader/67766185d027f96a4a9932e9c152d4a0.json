{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\employerApplies.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChevronLeft, Download } from \"react-feather\";\nimport EmployerSwitch from \"../components/employerSwitch\";\nimport deloitte from \"../images/deloitte.png\";\nimport procredit from \"../images/procredit.png\";\nimport fozzy from \"../images/img.png\";\nimport EmployerVacancyCard from \"../components/employerVacancyCard\";\nimport { useTable, useRowSelect } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EmployerApplies() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [state, setState] = useState({\n    employerName: null,\n    employerLogo: null,\n    employerDescription: null,\n    position: null,\n    category: null,\n    salary: null,\n    location: null,\n    vacancyDescription: null\n  }); // const data = [\n  //     {\n  //         id: 1,\n  //         title: \"Коваленко Анна\",\n  //         description: \"Resume_1.pdf\",\n  //         company: \"28.10\",\n  //     },\n  // ]\n\n  const data = React.useMemo(() => [{\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this),\n    col1: 'Hello',\n    col2: 'World',\n    col3: \"Коваленко Анна\",\n    col4: \"28.10\"\n  }, {\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this),\n    col1: 'Hello',\n    col2: 'World',\n    col3: \"Коваленко Анна\",\n    col4: \"28.10\"\n  }, {\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this),\n    col1: 'Hello',\n    col2: 'World',\n    col3: \"Коваленко Анна\",\n    col4: \"28.10\"\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: ({\n      getToggleAllRowsSelectedProps\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this),\n    accessor: 'checkbox'\n  }, {\n    Header: 'Прізвище та ім`я',\n    accessor: 'name'\n  }, {\n    Header: 'Резюме',\n    accessor: 'resume'\n  }, {\n    Header: 'Контакти',\n    accessor: 'contacts'\n  }, {\n    Header: 'Дата подачі',\n    accessor: 'data'\n  }], []);\n  const IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_s(({\n    indeterminate,\n    ...rest\n  }, ref) => {\n    _s();\n\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ref: resolvedRef,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n\n  function Table({\n    columns,\n    data\n  }) {\n    _s2();\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      selectedFlatRows,\n      state: {\n        selectedRowIds\n      }\n    } = useTable({\n      columns,\n      data\n    }, useRowSelect, hooks => {\n      hooks.visibleColumns.push(columns => [// Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({\n          getToggleAllRowsSelectedProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this)\n      }, ...columns]);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-container\",\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"title-table-text\",\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: data.map((row, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-table-text\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    title: \"Toggle Row Selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-table-text\",\n                children: row.col1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-table-text\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"resume-table-button\",\n                  children: [/*#__PURE__*/_jsxDEV(Download, {\n                    size: 18,\n                    color: \"var(--black\",\n                    className: \"download-employer-applies\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 41\n                  }, this), row.col2]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-table-text\",\n                children: row.col3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-table-text\",\n                children: row.col4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Rows: \", Object.keys(selectedRowIds).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: JSON.stringify({\n            selectedRowIds: selectedRowIds,\n            'selectedFlatRows[].original': selectedFlatRows.map(d => d.original)\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  } // const tableInstance = useTable({ columns, data })\n\n\n  _s2(Table, \"BjJ5SBVpuQx0ak5dusvpwmtUYtg=\", false, function () {\n    return [useTable];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container padding-top-bottom-cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employer-switch-container\",\n        children: /*#__PURE__*/_jsxDEV(EmployerSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7 applies-col-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-blue-div-employer-applies\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blue-link-button-applies\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20,\n              color: \"var(--blue\",\n              className: \"chevron-employer-applies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), \"\\u041D\\u0430\\u0437\\u0430\\u0434 \\u0434\\u043E \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u0439\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employer-vacancies-applies-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-of-page-applies\",\n            children: \"\\u0412\\u0456\\u0434\\u0433\\u0443\\u043A\\u0438 \\u043D\\u0430 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-of-page-applies-vacancy\",\n            children: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 \\u0437 \\u043A\\u043E\\u043C\\u0443\\u043D\\u0456\\u043A\\u0430\\u0446\\u0456\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 applies-col-display\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(EmployerApplies, \"OfJ1FPOnwIDGj6GAq3hRPBoDh8U=\");\n\n_c = EmployerApplies;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployerApplies\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/employerApplies.js"],"names":["React","useState","ChevronLeft","Download","EmployerSwitch","deloitte","procredit","fozzy","EmployerVacancyCard","useTable","useRowSelect","EmployerApplies","state","setState","employerName","employerLogo","employerDescription","position","category","salary","location","vacancyDescription","data","useMemo","Cell","row","getToggleRowSelectedProps","col1","col2","col3","col4","columns","Header","getToggleAllRowsSelectedProps","accessor","IndeterminateCheckbox","forwardRef","indeterminate","rest","ref","defaultRef","useRef","resolvedRef","useEffect","current","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","selectedRowIds","hooks","visibleColumns","push","id","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","Object","keys","length","JSON","stringify","d","original"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {ChevronLeft, Download} from \"react-feather\"\r\nimport EmployerSwitch from \"../components/employerSwitch\"\r\nimport deloitte from \"../images/deloitte.png\"\r\nimport procredit from \"../images/procredit.png\"\r\nimport fozzy from \"../images/img.png\"\r\nimport EmployerVacancyCard from \"../components/employerVacancyCard\"\r\nimport { useTable, useRowSelect } from 'react-table'\r\n\r\nexport default function EmployerApplies() {\r\n\r\n    const [state, setState] = useState({\r\n        employerName: null,\r\n        employerLogo: null,\r\n        employerDescription: null,\r\n        position: null,\r\n        category: null,\r\n        salary: null,\r\n        location: null,\r\n        vacancyDescription: null,\r\n    })\r\n\r\n    // const data = [\r\n    //     {\r\n    //         id: 1,\r\n    //         title: \"Коваленко Анна\",\r\n    //         description: \"Resume_1.pdf\",\r\n    //         company: \"28.10\",\r\n    //     },\r\n    // ]\r\n\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                Cell: ({ row }) => (\r\n                    <div>\r\n                        <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                    </div>\r\n                ),\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n                col3: \"Коваленко Анна\",\r\n                col4: \"28.10\",\r\n            },\r\n            {\r\n                Cell: ({ row }) => (\r\n                    <div>\r\n                        <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                    </div>\r\n                ),\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n                col3: \"Коваленко Анна\",\r\n                col4: \"28.10\",\r\n            },\r\n            {\r\n                Cell: ({ row }) => (\r\n                    <div>\r\n                        <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                    </div>\r\n                ),\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n                col3: \"Коваленко Анна\",\r\n                col4: \"28.10\",\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                    <div>\r\n                        <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                    </div>\r\n                ),\r\n                accessor: 'checkbox',\r\n            },\r\n            {\r\n                Header: 'Прізвище та ім`я',\r\n                accessor: 'name',\r\n            },\r\n            {\r\n                Header: 'Резюме',\r\n                accessor: 'resume',\r\n            },\r\n            {\r\n                Header: 'Контакти',\r\n                accessor: 'contacts',\r\n            },\r\n            {\r\n                Header: 'Дата подачі',\r\n                accessor: 'data',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n        ({ indeterminate, ...rest }, ref) => {\r\n            const defaultRef = React.useRef()\r\n            const resolvedRef = ref || defaultRef\r\n\r\n            React.useEffect(() => {\r\n                resolvedRef.current.indeterminate = indeterminate\r\n            }, [resolvedRef, indeterminate])\r\n\r\n            return (\r\n                <>\r\n                    <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n                </>\r\n            )\r\n        }\r\n    )\r\n\r\n    function Table({ columns, data }) {\r\n        // Use the state and functions returned from useTable to build your UI\r\n        const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n            selectedFlatRows,\r\n            state: { selectedRowIds },\r\n        } = useTable(\r\n            {\r\n                columns,\r\n                data,\r\n            },\r\n            useRowSelect,\r\n            hooks => {\r\n                hooks.visibleColumns.push(columns => [\r\n                    // Let's make a column for selection\r\n                    {\r\n                        id: 'selection',\r\n                        // The header can use the table's getToggleAllRowsSelectedProps method\r\n                        // to render a checkbox\r\n                        Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                        // The cell can use the individual row's getToggleRowSelectedProps method\r\n                        // to the render a checkbox\r\n                        Cell: ({ row }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                    },\r\n                    ...columns,\r\n                ])\r\n            }\r\n        )\r\n        return (\r\n            <div className=\"table-div-container\">\r\n\r\n                <table className=\"table-container\" {...getTableProps()}>\r\n                    <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className=\"title-table-text\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                    {/*{rows.map(row => {*/}\r\n                    {/*    prepareRow(row)*/}\r\n                    {/*    return (*/}\r\n                    {/*        <tr {...row.getRowProps()}>*/}\r\n                    {/*            {row.cells.map(cell => {*/}\r\n                    {/*                return (*/}\r\n                    {/*                    <td {...cell.getCellProps()}>*/}\r\n                    {/*                        {cell.render('Cell')}*/}\r\n                    {/*                    </td>*/}\r\n                    {/*                )*/}\r\n                    {/*            })}*/}\r\n                    {/*        </tr>*/}\r\n                    {/*    )*/}\r\n                    {/*})}*/}\r\n\r\n                    {data.map((row, i) => {\r\n                        return (\r\n                            <tr>\r\n                                <td className=\"td-table-text\">\r\n                                    <div>\r\n                                        <input type=\"checkbox\" title=\"Toggle Row Selected\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td className=\"td-table-text\">{row.col1}</td>\r\n                                <td className=\"td-table-text\">\r\n                                    <button className=\"resume-table-button\">\r\n                                        <Download size={18} color={\"var(--black\"} className={\"download-employer-applies\"}/>\r\n                                        {row.col2}\r\n                                    </button>\r\n                                </td>\r\n                                <td className=\"td-table-text\">{row.col3}</td>\r\n                                <td className=\"td-table-text\">{row.col4}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n                <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n                <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n              {\r\n                  selectedRowIds: selectedRowIds,\r\n                  'selectedFlatRows[].original': selectedFlatRows.map(\r\n                      d => d.original\r\n                  ),\r\n              },\r\n              null,\r\n              2\r\n          )}\r\n        </code>\r\n      </pre>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // const tableInstance = useTable({ columns, data })\r\n\r\n    return(\r\n        <div className=\"container padding-top-bottom-cabinet\">\r\n            <div className=\"row center-row\">\r\n                <div className=\"employer-switch-container\">\r\n                    <EmployerSwitch/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-7 applies-col-display\">\r\n                    <div className=\"button-blue-div-employer-applies\">\r\n                        <button className=\"blue-link-button-applies\">\r\n                            <ChevronLeft size={20} color={\"var(--blue\"} className={\"chevron-employer-applies\"}/>\r\n                            Назад до вакансій\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"employer-vacancies-applies-text\">\r\n                        <p className=\"title-of-page-applies\">\r\n                            Відгуки на вакансію\r\n                        </p>\r\n                        <p className=\"title-of-page-applies-vacancy\">\r\n                            Менеджер з комунікацій\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-8 applies-col-display\">\r\n\r\n                    <Table columns={columns} data={data} />\r\n\r\n                    {/*<div className=\"table-div-container\">*/}\r\n                    {/*    <table className=\"table-container\">*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <th className=\"title-table-text\">Прізвище та ім'я</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Резюме</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Контакти</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Дата подачі</th>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <td className=\"td-table-text\">Коваленко Анна</td>*/}\r\n                    {/*            <td className=\"td-table-text\">*/}\r\n                    {/*                <button className=\"resume-table-button\">*/}\r\n                    {/*                    <Download size={18} color={\"var(--black\"} className={\"download-employer-applies\"}/>*/}\r\n                    {/*                    Resume_1.pdf*/}\r\n                    {/*                </button>*/}\r\n                    {/*            </td>*/}\r\n                    {/*            <td className=\"td-table-text\">annakonovalenko@gmail.com</td>*/}\r\n                    {/*            <td className=\"td-table-text\">28.10</td>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*    </table>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}