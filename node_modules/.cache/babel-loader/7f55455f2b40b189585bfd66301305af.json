{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\vacancy\\\\filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport SelectCategories from '../vacancy/SelectCategories';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Sliders, ChevronDown } from \"react-feather\";\nimport SelectForm from \"../helpers/selectForm\";\nimport CheckboxGroup from \"../helpers/checkboxGroup\";\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filters(props) {\n  _s();\n\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 992px)'\n  }); // const filterVacancies = () => {\n  //     alert(`User Created!\n  //     Name: ${inputs.schedule}`\n  //     )\n  // }\n  // const {inputs, handleInputChange, handleSubmit} =\n  //     useForm({city: {[\"\"]}, location: {[\"\"]}, category: {[\"\"]}, schedule: {[\"\"]}, filterVacancies);\n  // const [city, setCity] = useState(null)\n  // const [location, setLocation] = useState(null)\n  // const [category, setCategory] = useState(null)\n  // const [schedule, setSchedule] = useState(null)\n\n  const initialValues = {\n    city: '',\n    remote: '',\n    category: '',\n    schedule: '',\n    type: '',\n    price: ''\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // setFormErrors(validate(formValues));\n    // setIsSubmit(true);\n  };\n\n  const handleChangeInput = event => {\n    // const target = event.target;\n    // const value = target.type === 'checkbox' ? target.checked : target.value;\n    // const name = target.name;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name; // const {name, value} = target;\n\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const cities = [{\n    value: 'Київ',\n    label: \"Київ\"\n  }, {\n    value: 'Одеса',\n    label: \"Одеса\"\n  }, {\n    value: 'Львів',\n    label: \"Львів\"\n  }]; // const schedules = [\n  //     {id: 1, name:\"Full-time\"},\n  //     {id: 2, name:\"Part-time\"},\n  //     {id: 3, name:\"Гнучкий full-time\"},\n  // ]\n\n  const schedules = [\"Full-time\", \"Part-time\", \"Гнучкий full-time\"];\n  const locations = [\"Тільки віддалено\"];\n  const opportunities = [\"Стажування\", \"Junior-вакансії\"];\n  const prices = [\"Безкоштовно\", \"Платно\"]; // function handleInputChange(event) {\n  //     const target = event.target;\n  //     const value = target.type === 'checkbox' ? target.checked : target.value;\n  //     const name = target.name;\n  //\n  //     setSchedule({\n  //         [name]: value\n  //     });\n  //\n  //     console.log(schedule)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"filter-padding\",\n    onSubmit: handleSubmit,\n    children: [isDesktop && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"filters-title-text\",\n      children: [/*#__PURE__*/_jsxDEV(Sliders, {\n        size: 18,\n        color: \"var(--gray)\",\n        className: \"filter-icon-margin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), \"\\u0424\\u0456\\u043B\\u044C\\u0442\\u0440\\u0438\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SelectForm, {\n      name: \"city\",\n      multiple: false,\n      title: \"Місто\",\n      placeholder: \"Оберіть місто\",\n      options: cities // value={city}\n      // onChange={handleInputChange}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"agree\",\n        name: \"agree\",\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        checked: formValues.remote,\n        onChange: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"agree\",\n        children: \"\\u0422\\u0456\\u043B\\u044C\\u043A\\u0438 \\u0432\\u0456\\u0434\\u0434\\u0430\\u043B\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectCategories, {\n      isUsedInFilter: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), props.opportunitites ? /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n      name: \"price\",\n      title: \"Вартість\",\n      options: prices,\n      checked: formValues.price,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CheckboxGroup, {\n        name: \"schedule\",\n        title: \"Графік\",\n        options: schedules // checked={inputs.schedule}\n        // onChange={handleInputChange}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n        name: \"opportunity\",\n        title: \"Вид можливості\",\n        options: opportunities // checked={inputs.schedule}\n        // onChange={handleInputChange}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"buttton\", {\n      className: \"round-button-border round-button-filter\",\n      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Filters, \"YEu/n8CeRCiny1znfDCty0/CN2Q=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/vacancy/filters.js"],"names":["React","Component","useState","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","SelectCategories","Checkbox","Sliders","ChevronDown","SelectForm","CheckboxGroup","useMediaQuery","Filters","props","isDesktop","query","initialValues","city","remote","category","schedule","type","price","formValues","setFormValues","handleSubmit","e","preventDefault","handleChangeInput","event","target","value","checked","name","cities","label","schedules","locations","opportunities","prices","opportunitites","handleInputChange"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Select from '@mui/material/Select';\r\nimport SelectCategories from '../vacancy/SelectCategories';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport {Sliders, ChevronDown} from \"react-feather\";\r\nimport SelectForm from \"../helpers/selectForm\";\r\nimport CheckboxGroup from \"../helpers/checkboxGroup\";\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nexport default function Filters(props) {\r\n\r\n    const isDesktop = useMediaQuery({\r\n        query: '(min-width: 992px)'\r\n    })\r\n\r\n    // const filterVacancies = () => {\r\n    //     alert(`User Created!\r\n    //     Name: ${inputs.schedule}`\r\n    //     )\r\n    // }\r\n    \r\n    // const {inputs, handleInputChange, handleSubmit} =\r\n    //     useForm({city: {[\"\"]}, location: {[\"\"]}, category: {[\"\"]}, schedule: {[\"\"]}, filterVacancies);\r\n    \r\n    // const [city, setCity] = useState(null)\r\n    // const [location, setLocation] = useState(null)\r\n    // const [category, setCategory] = useState(null)\r\n    // const [schedule, setSchedule] = useState(null)\r\n\r\n    const initialValues = {\r\n        city: '',\r\n        remote: '',\r\n        category: '',\r\n        schedule: '',\r\n        type: '',\r\n        price: '',\r\n    };\r\n\r\n    const [formValues, setFormValues] = useState(initialValues);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // setFormErrors(validate(formValues));\r\n        // setIsSubmit(true);\r\n    }\r\n\r\n    const handleChangeInput = (event) => {\r\n        // const target = event.target;\r\n        // const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        // const name = target.name;\r\n\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        // const {name, value} = target;\r\n        setFormValues({...formValues, [name]: value});\r\n    }\r\n\r\n    const cities = [\r\n        {value: 'Київ', label: \"Київ\"},\r\n        {value: 'Одеса', label: \"Одеса\"},\r\n        {value: 'Львів', label: \"Львів\"},\r\n    ]\r\n\r\n    // const schedules = [\r\n    //     {id: 1, name:\"Full-time\"},\r\n    //     {id: 2, name:\"Part-time\"},\r\n    //     {id: 3, name:\"Гнучкий full-time\"},\r\n    // ]\r\n\r\n    const schedules = [\r\n        \"Full-time\",\r\n        \"Part-time\",\r\n       \"Гнучкий full-time\",\r\n    ]\r\n\r\n    const locations = [\r\n        \"Тільки віддалено\"\r\n    ]\r\n\r\n    const opportunities = [\r\n        \"Стажування\",\r\n        \"Junior-вакансії\",\r\n    ]\r\n\r\n    const prices = [\r\n        \"Безкоштовно\",\r\n        \"Платно\",\r\n    ]\r\n\r\n    // function handleInputChange(event) {\r\n    //     const target = event.target;\r\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    //     const name = target.name;\r\n    //\r\n    //     setSchedule({\r\n    //         [name]: value\r\n    //     });\r\n    //\r\n    //     console.log(schedule)\r\n    // }\r\n\r\n    return (\r\n        <form className=\"filter-padding\" onSubmit={handleSubmit}>\r\n            {\r\n                isDesktop &&\r\n                <p className=\"filters-title-text\">\r\n                    <Sliders size={18} color={\"var(--gray)\"} className={\"filter-icon-margin\"}/>\r\n                    Фільтри\r\n                </p>\r\n            }\r\n            <SelectForm\r\n                name={\"city\"}\r\n                multiple={false}\r\n                title={\"Місто\"}\r\n                placeholder={\"Оберіть місто\"}\r\n                options={cities}\r\n                // value={city}\r\n                // onChange={handleInputChange}\r\n            />\r\n            <div className=\"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\">\r\n                <input\r\n                    id={\"agree\"}\r\n                    name={\"agree\"}\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    checked={formValues.remote}\r\n                    onChange={handleChangeInput}\r\n                />\r\n                <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor={\"agree\"}\r\n                >\r\n                    Тільки віддалено\r\n                </label>\r\n            </div>\r\n\r\n            <SelectCategories isUsedInFilter={true}/>\r\n\r\n            {\r\n                props.opportunitites ? (\r\n                    <CheckboxGroup\r\n                        name={\"price\"}\r\n                        title={\"Вартість\"}\r\n                        options={prices}\r\n                        checked={formValues.price}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <CheckboxGroup\r\n                            name={\"schedule\"}\r\n                            title={\"Графік\"}\r\n                            options={schedules}\r\n                            // checked={inputs.schedule}\r\n                            // onChange={handleInputChange}\r\n                        />\r\n                        <CheckboxGroup\r\n                        name={\"opportunity\"}\r\n                        title={\"Вид можливості\"}\r\n                        options={opportunities}\r\n                        // checked={inputs.schedule}\r\n                        // onChange={handleInputChange}\r\n                        />\r\n                    </React.Fragment>\r\n                )\r\n\r\n            }\r\n\r\n            <buttton className=\"round-button-border round-button-filter\">\r\n                Показати\r\n            </buttton>\r\n        </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}