{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\employerApplies.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChevronLeft, Download } from \"react-feather\";\nimport EmployerSwitch from \"../components/employerSwitch\";\nimport deloitte from \"../images/deloitte.png\";\nimport procredit from \"../images/procredit.png\";\nimport fozzy from \"../images/img.png\";\nimport EmployerVacancyCard from \"../components/employerVacancyCard\";\nimport { useTable, useRowSelect } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EmployerApplies() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [state, setState] = useState({\n    employerName: null,\n    employerLogo: null,\n    employerDescription: null,\n    position: null,\n    category: null,\n    salary: null,\n    location: null,\n    vacancyDescription: null\n  });\n  const vacancies = [{\n    id: 1,\n    title: \"Менеджер з комунікацій\",\n    description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n    company: \"Deloitte\",\n    logo: deloitte,\n    schedule: 'Гнучкий full-time',\n    city: \"Київ\",\n    salary: \"10 000\",\n    experience: \"Без досвіду\",\n    course: \"3+\",\n    language: \"Англійська\",\n    languageLevel: \"B1\"\n  }];\n\n  const range = len => {\n    const arr = [];\n\n    for (let i = 0; i < len; i++) {\n      arr.push(i);\n    }\n\n    return arr;\n  };\n\n  const newPerson = [{\n    id: 1,\n    title: \"Коваленко Анна\",\n    description: \"Resume_1.pdf\",\n    company: \"28.10\"\n  }];\n  const IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_s(({\n    indeterminate,\n    ...rest\n  }, ref) => {\n    _s();\n\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ref: resolvedRef,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n\n  function Table({\n    columns,\n    data\n  }) {\n    _s2();\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      selectedFlatRows,\n      state: {\n        selectedRowIds\n      }\n    } = useTable({\n      columns,\n      data\n    }, useRowSelect, hooks => {\n      hooks.visibleColumns.push(columns => [// Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({\n          getToggleAllRowsSelectedProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this)\n      }, ...columns]);\n    }); // Render the UI for your table\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-container\",\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"title-table-text\",\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.slice(0, 10).map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"td-table-text\",\n                  ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Rows: \", Object.keys(selectedRowIds).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: JSON.stringify({\n            selectedRowIds: selectedRowIds,\n            'selectedFlatRows[].original': selectedFlatRows.map(d => d.original)\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s2(Table, \"BjJ5SBVpuQx0ak5dusvpwmtUYtg=\", false, function () {\n    return [useTable];\n  });\n\n  const columns = React.useMemo(() => [{\n    Header: 'Прізвище та ім`я'\n  }, {\n    Header: 'Резюме'\n  }, {\n    Header: 'Контакти'\n  }, {\n    Header: 'Дата подачі'\n  }], []);\n  const data = React.useMemo(() => makeData(10, 3), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container padding-top-bottom-cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employer-switch-container\",\n        children: /*#__PURE__*/_jsxDEV(EmployerSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7 applies-col-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-blue-div-employer-applies\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blue-link-button-applies\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20,\n              color: \"var(--blue\",\n              className: \"chevron-employer-applies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), \"\\u041D\\u0430\\u0437\\u0430\\u0434 \\u0434\\u043E \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u0439\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employer-vacancies-applies-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-of-page-applies\",\n            children: \"\\u0412\\u0456\\u0434\\u0433\\u0443\\u043A\\u0438 \\u043D\\u0430 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-of-page-applies-vacancy\",\n            children: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 \\u0437 \\u043A\\u043E\\u043C\\u0443\\u043D\\u0456\\u043A\\u0430\\u0446\\u0456\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 applies-col-display\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(EmployerApplies, \"vgo38kOxj7e/LnQAVduCkptFn04=\");\n\n_c = EmployerApplies;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployerApplies\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/employerApplies.js"],"names":["React","useState","ChevronLeft","Download","EmployerSwitch","deloitte","procredit","fozzy","EmployerVacancyCard","useTable","useRowSelect","EmployerApplies","state","setState","employerName","employerLogo","employerDescription","position","category","salary","location","vacancyDescription","vacancies","id","title","description","company","logo","schedule","city","experience","course","language","languageLevel","range","len","arr","i","push","newPerson","IndeterminateCheckbox","forwardRef","indeterminate","rest","ref","defaultRef","useRef","resolvedRef","useEffect","current","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","selectedRowIds","hooks","visibleColumns","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","slice","getRowProps","cells","cell","getCellProps","Object","keys","length","JSON","stringify","d","original","useMemo","makeData"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {ChevronLeft, Download} from \"react-feather\"\r\nimport EmployerSwitch from \"../components/employerSwitch\"\r\nimport deloitte from \"../images/deloitte.png\"\r\nimport procredit from \"../images/procredit.png\"\r\nimport fozzy from \"../images/img.png\"\r\nimport EmployerVacancyCard from \"../components/employerVacancyCard\"\r\nimport { useTable, useRowSelect } from 'react-table'\r\n\r\nexport default function EmployerApplies() {\r\n\r\n    const [state, setState] = useState({\r\n        employerName: null,\r\n        employerLogo: null,\r\n        employerDescription: null,\r\n        position: null,\r\n        category: null,\r\n        salary: null,\r\n        location: null,\r\n        vacancyDescription: null,\r\n    })\r\n\r\n    const vacancies = [\r\n        {\r\n            id: 1,\r\n            title: \"Менеджер з комунікацій\",\r\n            description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\r\n            company: \"Deloitte\",\r\n            logo: deloitte,\r\n            schedule: 'Гнучкий full-time',\r\n            city: \"Київ\",\r\n            salary: \"10 000\",\r\n            experience: \"Без досвіду\",\r\n            course: \"3+\",\r\n            language: \"Англійська\",\r\n            languageLevel: \"B1\",\r\n        },\r\n    ];\r\n\r\n\r\n    const range = len => {\r\n        const arr = []\r\n        for (let i = 0; i < len; i++) {\r\n            arr.push(i)\r\n        }\r\n        return arr\r\n    }\r\n\r\n    const newPerson = [\r\n        {\r\n            id: 1,\r\n            title: \"Коваленко Анна\",\r\n            description: \"Resume_1.pdf\",\r\n            company: \"28.10\",\r\n        },\r\n        ]\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n        ({ indeterminate, ...rest }, ref) => {\r\n            const defaultRef = React.useRef()\r\n            const resolvedRef = ref || defaultRef\r\n\r\n            React.useEffect(() => {\r\n                resolvedRef.current.indeterminate = indeterminate\r\n            }, [resolvedRef, indeterminate])\r\n\r\n            return (\r\n                <>\r\n                    <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n                </>\r\n            )\r\n        }\r\n    )\r\n\r\n    function Table({ columns, data }) {\r\n        // Use the state and functions returned from useTable to build your UI\r\n        const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n            selectedFlatRows,\r\n            state: { selectedRowIds },\r\n        } = useTable(\r\n            {\r\n                columns,\r\n                data,\r\n            },\r\n            useRowSelect,\r\n            hooks => {\r\n                hooks.visibleColumns.push(columns => [\r\n                    // Let's make a column for selection\r\n                    {\r\n                        id: 'selection',\r\n                        // The header can use the table's getToggleAllRowsSelectedProps method\r\n                        // to render a checkbox\r\n                        Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                        // The cell can use the individual row's getToggleRowSelectedProps method\r\n                        // to the render a checkbox\r\n                        Cell: ({ row }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                    },\r\n                    ...columns,\r\n                ])\r\n            }\r\n        )\r\n\r\n        // Render the UI for your table\r\n        return (\r\n            <div className=\"table-div-container\">\r\n\r\n                <table className=\"table-container\" {...getTableProps()}>\r\n                    <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className=\"title-table-text\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                    {rows.slice(0, 10).map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td className=\"td-table-text\" {...cell.getCellProps()}>\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                })}\r\n\r\n                                {/*<button className=\"resume-table-button\">*/}\r\n                                {/*    <Download size={18} color={\"var(--black\"} className={\"download-employer-applies\"}/>*/}\r\n                                {/*    Resume_1.pdf*/}\r\n                                {/*</button>*/}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n                <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n              {\r\n                  selectedRowIds: selectedRowIds,\r\n                  'selectedFlatRows[].original': selectedFlatRows.map(\r\n                      d => d.original\r\n                  ),\r\n              },\r\n              null,\r\n              2\r\n          )}\r\n        </code>\r\n      </pre>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Прізвище та ім`я',\r\n            },\r\n            {\r\n                Header: 'Резюме',\r\n            },\r\n            {\r\n                Header: 'Контакти',\r\n            },\r\n            {\r\n                Header: 'Дата подачі',\r\n            },\r\n\r\n        ],\r\n        []\r\n    )\r\n\r\n    const data = React.useMemo(() => makeData(10, 3), [])\r\n\r\n    return(\r\n        <div className=\"container padding-top-bottom-cabinet\">\r\n            <div className=\"row center-row\">\r\n                <div className=\"employer-switch-container\">\r\n                    <EmployerSwitch/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-7 applies-col-display\">\r\n                    <div className=\"button-blue-div-employer-applies\">\r\n                        <button className=\"blue-link-button-applies\">\r\n                            <ChevronLeft size={20} color={\"var(--blue\"} className={\"chevron-employer-applies\"}/>\r\n                            Назад до вакансій\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"employer-vacancies-applies-text\">\r\n                        <p className=\"title-of-page-applies\">\r\n                            Відгуки на вакансію\r\n                        </p>\r\n                        <p className=\"title-of-page-applies-vacancy\">\r\n                            Менеджер з комунікацій\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-8 applies-col-display\">\r\n\r\n                    <Table columns={columns} data={data} />\r\n\r\n                    {/*<div className=\"table-div-container\">*/}\r\n                    {/*    <table className=\"table-container\">*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <th className=\"title-table-text\">Прізвище та ім'я</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Резюме</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Контакти</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Дата подачі</th>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <td className=\"td-table-text\">Коваленко Анна</td>*/}\r\n                    {/*            <td className=\"td-table-text\">*/}\r\n                    {/*                <button className=\"resume-table-button\">*/}\r\n                    {/*                    <Download size={18} color={\"var(--black\"} className={\"download-employer-applies\"}/>*/}\r\n                    {/*                    Resume_1.pdf*/}\r\n                    {/*                </button>*/}\r\n                    {/*            </td>*/}\r\n                    {/*            <td className=\"td-table-text\">annakonovalenko@gmail.com</td>*/}\r\n                    {/*            <td className=\"td-table-text\">28.10</td>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*    </table>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}