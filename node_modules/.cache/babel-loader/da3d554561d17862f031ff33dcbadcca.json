{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\employerApplies.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChevronLeft, Download } from \"react-feather\";\nimport EmployerSwitch from \"../components/employerSwitch\";\nimport deloitte from \"../images/deloitte.png\";\nimport procredit from \"../images/procredit.png\";\nimport fozzy from \"../images/img.png\";\nimport EmployerVacancyCard from \"../components/employerVacancyCard\";\nimport { useTable, useRowSelect } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EmployerApplies() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [state, setState] = useState({\n    employerName: null,\n    employerLogo: null,\n    employerDescription: null,\n    position: null,\n    category: null,\n    salary: null,\n    location: null,\n    vacancyDescription: null\n  });\n  const vacancies = [{\n    id: 1,\n    title: \"Менеджер з комунікацій\",\n    description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n    company: \"Deloitte\",\n    logo: deloitte,\n    schedule: 'Гнучкий full-time',\n    city: \"Київ\",\n    salary: \"10 000\",\n    experience: \"Без досвіду\",\n    course: \"3+\",\n    language: \"Англійська\",\n    languageLevel: \"B1\"\n  }];\n\n  const range = len => {\n    const arr = [];\n\n    for (let i = 0; i < len; i++) {\n      arr.push(i);\n    }\n\n    return arr;\n  };\n\n  const newPerson = () => {\n    const statusChance = Math.random();\n    return {\n      firstName: namor.generate({\n        words: 1,\n        numbers: 0\n      }),\n      lastName: namor.generate({\n        words: 1,\n        numbers: 0\n      }),\n      age: Math.floor(Math.random() * 30),\n      visits: Math.floor(Math.random() * 100),\n      progress: Math.floor(Math.random() * 100),\n      status: statusChance > 0.66 ? 'relationship' : statusChance > 0.33 ? 'complicated' : 'single'\n    };\n  };\n\n  function makeData(...lens) {\n    const makeDataLevel = (depth = 0) => {\n      const len = lens[depth];\n      return range(len).map(d => {\n        return { ...newPerson(),\n          subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n        };\n      });\n    };\n\n    return makeDataLevel();\n  }\n\n  const IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_s(({\n    indeterminate,\n    ...rest\n  }, ref) => {\n    _s();\n\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ref: resolvedRef,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n\n  function Table({\n    columns,\n    data\n  }) {\n    _s2();\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      selectedFlatRows,\n      state: {\n        selectedRowIds\n      }\n    } = useTable({\n      columns,\n      data\n    }, useRowSelect, hooks => {\n      hooks.visibleColumns.push(columns => [// Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({\n          getToggleAllRowsSelectedProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this)\n      }, ...columns]);\n    }); // Render the UI for your table\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.slice(0, 10).map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Rows: \", Object.keys(selectedRowIds).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: JSON.stringify({\n            selectedRowIds: selectedRowIds,\n            'selectedFlatRows[].original': selectedFlatRows.map(d => d.original)\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  _s2(Table, \"BjJ5SBVpuQx0ak5dusvpwmtUYtg=\", false, function () {\n    return [useTable];\n  });\n\n  const data = React.useMemo(() => [{\n    id: 1,\n    title: \"Менеджер з комунікацій\",\n    description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n    company: \"Deloitte\",\n    logo: deloitte,\n    schedule: 'Гнучкий full-time',\n    city: \"Київ\",\n    salary: \"10 000\",\n    experience: \"Без досвіду\",\n    course: \"3+\",\n    language: \"Англійська\",\n    languageLevel: \"B1\"\n  }, {\n    id: 2,\n    title: \"Менеджер з комунікацій\",\n    description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n    company: \"Deloitte\",\n    logo: deloitte,\n    schedule: 'Гнучкий full-time',\n    city: \"Київ\",\n    salary: \"10 000\",\n    experience: \"Без досвіду\",\n    course: \"3+\",\n    language: \"Англійська\",\n    languageLevel: \"B1\"\n  }]);\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container padding-top-bottom-cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employer-switch-container\",\n        children: /*#__PURE__*/_jsxDEV(EmployerSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7 applies-col-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-blue-div-employer-applies\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blue-link-button-applies\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20,\n              color: \"var(--blue\",\n              className: \"chevron-employer-applies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), \"\\u041D\\u0430\\u0437\\u0430\\u0434 \\u0434\\u043E \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u0439\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employer-vacancies-applies-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-of-page-applies\",\n            children: \"\\u0412\\u0456\\u0434\\u0433\\u0443\\u043A\\u0438 \\u043D\\u0430 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-of-page-applies-vacancy\",\n            children: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 \\u0437 \\u043A\\u043E\\u043C\\u0443\\u043D\\u0456\\u043A\\u0430\\u0446\\u0456\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 applies-col-display\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(EmployerApplies, \"OfJ1FPOnwIDGj6GAq3hRPBoDh8U=\");\n\n_c = EmployerApplies;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployerApplies\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/employerApplies.js"],"names":["React","useState","ChevronLeft","Download","EmployerSwitch","deloitte","procredit","fozzy","EmployerVacancyCard","useTable","useRowSelect","EmployerApplies","state","setState","employerName","employerLogo","employerDescription","position","category","salary","location","vacancyDescription","vacancies","id","title","description","company","logo","schedule","city","experience","course","language","languageLevel","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","visits","progress","status","makeData","lens","makeDataLevel","depth","map","d","subRows","undefined","IndeterminateCheckbox","forwardRef","indeterminate","rest","ref","defaultRef","useRef","resolvedRef","useEffect","current","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","selectedRowIds","hooks","visibleColumns","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","slice","getRowProps","cells","cell","getCellProps","Object","keys","length","JSON","stringify","original","useMemo","accessor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {ChevronLeft, Download} from \"react-feather\"\r\nimport EmployerSwitch from \"../components/employerSwitch\"\r\nimport deloitte from \"../images/deloitte.png\"\r\nimport procredit from \"../images/procredit.png\"\r\nimport fozzy from \"../images/img.png\"\r\nimport EmployerVacancyCard from \"../components/employerVacancyCard\"\r\nimport { useTable, useRowSelect } from 'react-table'\r\n\r\nexport default function EmployerApplies() {\r\n\r\n    const [state, setState] = useState({\r\n        employerName: null,\r\n        employerLogo: null,\r\n        employerDescription: null,\r\n        position: null,\r\n        category: null,\r\n        salary: null,\r\n        location: null,\r\n        vacancyDescription: null,\r\n    })\r\n\r\n    const vacancies = [\r\n        {\r\n            id: 1,\r\n            title: \"Менеджер з комунікацій\",\r\n            description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\r\n            company: \"Deloitte\",\r\n            logo: deloitte,\r\n            schedule: 'Гнучкий full-time',\r\n            city: \"Київ\",\r\n            salary: \"10 000\",\r\n            experience: \"Без досвіду\",\r\n            course: \"3+\",\r\n            language: \"Англійська\",\r\n            languageLevel: \"B1\",\r\n        },\r\n    ];\r\n\r\n\r\n    const range = len => {\r\n        const arr = []\r\n        for (let i = 0; i < len; i++) {\r\n            arr.push(i)\r\n        }\r\n        return arr\r\n    }\r\n\r\n    const newPerson = () => {\r\n        const statusChance = Math.random()\r\n        return {\r\n            firstName: namor.generate({ words: 1, numbers: 0 }),\r\n            lastName: namor.generate({ words: 1, numbers: 0 }),\r\n            age: Math.floor(Math.random() * 30),\r\n            visits: Math.floor(Math.random() * 100),\r\n            progress: Math.floor(Math.random() * 100),\r\n            status:\r\n                statusChance > 0.66\r\n                    ? 'relationship'\r\n                    : statusChance > 0.33\r\n                        ? 'complicated'\r\n                        : 'single',\r\n        }\r\n    }\r\n\r\n    function makeData(...lens) {\r\n        const makeDataLevel = (depth = 0) => {\r\n            const len = lens[depth]\r\n            return range(len).map(d => {\r\n                return {\r\n                    ...newPerson(),\r\n                    subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n                }\r\n            })\r\n        }\r\n\r\n        return makeDataLevel()\r\n    }\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n        ({ indeterminate, ...rest }, ref) => {\r\n            const defaultRef = React.useRef()\r\n            const resolvedRef = ref || defaultRef\r\n\r\n            React.useEffect(() => {\r\n                resolvedRef.current.indeterminate = indeterminate\r\n            }, [resolvedRef, indeterminate])\r\n\r\n            return (\r\n                <>\r\n                    <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n                </>\r\n            )\r\n        }\r\n    )\r\n\r\n    function Table({ columns, data }) {\r\n        // Use the state and functions returned from useTable to build your UI\r\n        const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n            selectedFlatRows,\r\n            state: { selectedRowIds },\r\n        } = useTable(\r\n            {\r\n                columns,\r\n                data,\r\n            },\r\n            useRowSelect,\r\n            hooks => {\r\n                hooks.visibleColumns.push(columns => [\r\n                    // Let's make a column for selection\r\n                    {\r\n                        id: 'selection',\r\n                        // The header can use the table's getToggleAllRowsSelectedProps method\r\n                        // to render a checkbox\r\n                        Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                        // The cell can use the individual row's getToggleRowSelectedProps method\r\n                        // to the render a checkbox\r\n                        Cell: ({ row }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                    },\r\n                    ...columns,\r\n                ])\r\n            }\r\n        )\r\n\r\n        // Render the UI for your table\r\n        return (\r\n            <>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                    {rows.slice(0, 10).map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n                <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n              {\r\n                  selectedRowIds: selectedRowIds,\r\n                  'selectedFlatRows[].original': selectedFlatRows.map(\r\n                      d => d.original\r\n                  ),\r\n              },\r\n              null,\r\n              2\r\n          )}\r\n        </code>\r\n      </pre>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                id: 1,\r\n                title: \"Менеджер з комунікацій\",\r\n                description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\r\n                company: \"Deloitte\",\r\n                logo: deloitte,\r\n                schedule: 'Гнучкий full-time',\r\n                city: \"Київ\",\r\n                salary: \"10 000\",\r\n                experience: \"Без досвіду\",\r\n                course: \"3+\",\r\n                language: \"Англійська\",\r\n                languageLevel: \"B1\",\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Менеджер з комунікацій\",\r\n                description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\r\n                company: \"Deloitte\",\r\n                logo: deloitte,\r\n                schedule: 'Гнучкий full-time',\r\n                city: \"Київ\",\r\n                salary: \"10 000\",\r\n                experience: \"Без досвіду\",\r\n                course: \"3+\",\r\n                language: \"Англійська\",\r\n                languageLevel: \"B1\",\r\n            },\r\n        ],\r\n    )\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Name',\r\n                columns: [\r\n                    {\r\n                        Header: 'First Name',\r\n                        accessor: 'firstName',\r\n                    },\r\n                    {\r\n                        Header: 'Last Name',\r\n                        accessor: 'lastName',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                Header: 'Info',\r\n                columns: [\r\n                    {\r\n                        Header: 'Age',\r\n                        accessor: 'age',\r\n                    },\r\n                    {\r\n                        Header: 'Visits',\r\n                        accessor: 'visits',\r\n                    },\r\n                    {\r\n                        Header: 'Status',\r\n                        accessor: 'status',\r\n                    },\r\n                    {\r\n                        Header: 'Profile Progress',\r\n                        accessor: 'progress',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    return(\r\n        <div className=\"container padding-top-bottom-cabinet\">\r\n            <div className=\"row center-row\">\r\n                <div className=\"employer-switch-container\">\r\n                    <EmployerSwitch/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-7 applies-col-display\">\r\n                    <div className=\"button-blue-div-employer-applies\">\r\n                        <button className=\"blue-link-button-applies\">\r\n                            <ChevronLeft size={20} color={\"var(--blue\"} className={\"chevron-employer-applies\"}/>\r\n                            Назад до вакансій\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"employer-vacancies-applies-text\">\r\n                        <p className=\"title-of-page-applies\">\r\n                            Відгуки на вакансію\r\n                        </p>\r\n                        <p className=\"title-of-page-applies-vacancy\">\r\n                            Менеджер з комунікацій\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-8 applies-col-display\">\r\n\r\n                    <Table columns={columns} data={data} />\r\n\r\n                    {/*<div className=\"table-div-container\">*/}\r\n                    {/*    <table className=\"table-container\">*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <th className=\"title-table-text\">Прізвище та ім'я</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Резюме</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Контакти</th>*/}\r\n                    {/*            <th className=\"title-table-text\">Дата подачі</th>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <td className=\"td-table-text\">Коваленко Анна</td>*/}\r\n                    {/*            <td className=\"td-table-text\">*/}\r\n                    {/*                <button className=\"resume-table-button\">*/}\r\n                    {/*                    <Download size={18} color={\"var(--black\"} className={\"download-employer-applies\"}/>*/}\r\n                    {/*                    Resume_1.pdf*/}\r\n                    {/*                </button>*/}\r\n                    {/*            </td>*/}\r\n                    {/*            <td className=\"td-table-text\">annakonovalenko@gmail.com</td>*/}\r\n                    {/*            <td className=\"td-table-text\">28.10</td>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*    </table>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}