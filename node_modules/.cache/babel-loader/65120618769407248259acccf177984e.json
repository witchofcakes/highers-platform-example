{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n//\n// export default function AppFunctional() {\n//     const [users, setUsers] = useState([]);\n//     const [page, setPage] = useState(0);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [errorMsg, setErrorMsg] = useState('');\n//\n//     useEffect(() => {\n//         const loadUsers = async () => {\n//             try {\n//                 setIsLoading(true);\n//                 const response = await axios.get(\n//                     `https://randomuser.me/api/?page=${page}&results=20`\n//                 );\n//\n//                 setUsers((users) => [...users, ...response.data.results]);\n//                 setErrorMsg('');\n//             } catch (error) {\n//                 setErrorMsg('Error while loading data. Try again later.');\n//             } finally {\n//                 setIsLoading(false);\n//             }\n//         };\n//\n//         loadUsers();\n//     }, [page]);\n//\n//     const loadMore = () => {\n//         setPage((page) => page + 1);\n//     };\n//\n//     return (\n//         <div className=\"main-section\">\n//             <UsersList users={users} />\n//             {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n//             <div className=\"load-more\">\n//                 <button onClick={loadMore} className=\"btn-grad\">\n//                     {isLoading ? 'Loading...' : 'Load More'}\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// };\n//\n//\n// // import React, { useState } from \"react\";\n// // import ReactDOM from \"react-dom\";\n// //\n// // const Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => {\n// //     return (\n// //         <input\n// //             type={type}\n// //             name={name}\n// //             checked={checked}\n// //             onChange={onChange}\n// //             className=\"custom-control-input\"\n// //         />\n// //     );\n// // };\n// //\n// // export default function Test() {\n// //     const [checkedItems, setCheckedItems] = useState({});\n// //\n// //     const handleChange = event => {\n// //         setCheckedItems({\n// //             ...checkedItems,\n// //             [event.target.name]: event.target.checked\n// //         });\n// //     };\n// //\n// //     const prices = [\n// //         {\n// //             name: \"free\",\n// //             key: \"free\",\n// //             label: \"Безкоштовно\"\n// //         },\n// //         {\n// //             name: \"paid\",\n// //             key: \"paid\",\n// //             label: \"Платно\"\n// //         }\n// //     ];\n// //\n// //     return (\n// //         <div>\n// //             {props.checkboxes.map(item => (\n// //                 <div className=\"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\">\n// //                     <label key={item.key}>\n// //                         {item.name}\n// //                     </label>\n// //                     <Checkbox\n// //                         name={item.name}\n// //                         checked={checkedItems[item.name]}\n// //                         onChange={handleChange}\n// //                     />\n// //                 </div>\n// //             ))}\n// //         </div>\n// //     );\n// // };\n// //\n// //\n// //\n// // // import { useState, useEffect } from \"react\";\n// // // import { useForm } from \"react-hook-form\";\n// // //\n// // // export default function Test() {\n// // //     const initialValues = {username: \"\", email: \"\", password: \"\"};\n// // //     const [formValues, setFormValues] = useState(initialValues);\n// // //     const [formErrors, setFormErrors] = useState({});\n// // //     const [isSubmit, setIsSubmit] = useState(false);\n// // //\n// // //     const handleChange = (e) => {\n// // //         const {name, value} = e.target;\n// // //         setFormValues({...formValues, [name]: value});\n// // //     }\n// // //\n// // //     const handleSubmit = (e) => {\n// // //         e.preventDefault();\n// // //         setFormErrors(validate(formValues));\n// // //         setIsSubmit(true);\n// // //     }\n// // //\n// // //     useEffect(() => {\n// // //         if(Object.keys(formErrors).length === 0 && isSubmit){\n// // //             console.log(formValues);\n// // //         }\n// // //     }, [formErrors]);\n// // //\n// // //     const validate = (values) =>{\n// // //         const errors = {};\n// // //         const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n// // //         if(!values.username){\n// // //             errors.username = \"username required\";\n// // //         }\n// // //         if(!values.email){\n// // //             errors.email = \"email required\";\n// // //         } else if (!regex.test(values.email)){\n// // //             errors.email = \"Цей email некоректний\"\n// // //         }\n// // //         if(!values.password){\n// // //             errors.password = \"password required\";\n// // //         } else if (values.password < 4){\n// // //             errors.password = \"Цей пароль занадто короткий\";\n// // //         }\n// // //         else if (values.password > 10){\n// // //             errors.password = \"Цей пароль занадто довгий\";\n// // //         }\n// // //         return errors;\n// // //     }\n// // //\n// // //     return (\n// // //         <div className=\"container\">\n// // //             <pre>{JSON.stringify(formValues, undefined, 2)}</pre>\n// // //             <form onSubmit={handleSubmit}>\n// // //                 <h1>Registration Form</h1>\n// // //                 <div className=\"ui divider\"></div>\n// // //                 <div className=\"ui form\">\n// // //                     <div className=\"field\">\n// // //                         <label>Username</label>\n// // //                         <input\n// // //                             type=\"text\"\n// // //                             name=\"username\"\n// // //                             className={\n// // //                                 (formErrors.username && isSubmit) ?\n// // //                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\n// // //                             }\n// // //                             placeholder=\"Username\"\n// // //                             value={formValues.username}\n// // //                             onChange={handleChange}\n// // //                         />\n// // //                     </div>\n// // //                     <p>{formErrors.username}</p>\n// // //                     <div className=\"field\">\n// // //                         <label>Email</label>\n// // //                         <input\n// // //                             type=\"email\"\n// // //                             name=\"email\"\n// // //                             className={\n// // //                                 (formErrors.email && isSubmit) ?\n// // //                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\n// // //                             }\n// // //                             placeholder=\"Email\"\n// // //                             value={formValues.email}\n// // //                             onChange={handleChange}\n// // //                         />\n// // //                     </div>\n// // //                     <p>{formErrors.email}</p>\n// // //                     <div className=\"field\">\n// // //                         <label>Password</label>\n// // //                         <input\n// // //                             type=\"password\"\n// // //                             name=\"password\"\n// // //                             placeholder=\"Password\"\n// // //                             className={\n// // //                                 (formErrors.password && isSubmit) ?\n// // //                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\n// // //                             }\n// // //                             value={formValues.password}\n// // //                             onChange={handleChange}\n// // //                         />\n// // //                     </div>\n// // //                     <p>{formErrors.password}</p>\n// // //                     <button className=\"fluid ui button blue\">Submit</button>\n// // //                 </div>\n// // //             </form>\n// // //         </div>\n// // //     );\n// // // }","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/src/components/helpers/tester.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n//\r\n// export default function AppFunctional() {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [page, setPage] = useState(0);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n//     const [errorMsg, setErrorMsg] = useState('');\r\n//\r\n//     useEffect(() => {\r\n//         const loadUsers = async () => {\r\n//             try {\r\n//                 setIsLoading(true);\r\n//                 const response = await axios.get(\r\n//                     `https://randomuser.me/api/?page=${page}&results=20`\r\n//                 );\r\n//\r\n//                 setUsers((users) => [...users, ...response.data.results]);\r\n//                 setErrorMsg('');\r\n//             } catch (error) {\r\n//                 setErrorMsg('Error while loading data. Try again later.');\r\n//             } finally {\r\n//                 setIsLoading(false);\r\n//             }\r\n//         };\r\n//\r\n//         loadUsers();\r\n//     }, [page]);\r\n//\r\n//     const loadMore = () => {\r\n//         setPage((page) => page + 1);\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"main-section\">\r\n//             <UsersList users={users} />\r\n//             {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n//             <div className=\"load-more\">\r\n//                 <button onClick={loadMore} className=\"btn-grad\">\r\n//                     {isLoading ? 'Loading...' : 'Load More'}\r\n//                 </button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n//\r\n// // import React, { useState } from \"react\";\r\n// // import ReactDOM from \"react-dom\";\r\n// //\r\n// // const Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => {\r\n// //     return (\r\n// //         <input\r\n// //             type={type}\r\n// //             name={name}\r\n// //             checked={checked}\r\n// //             onChange={onChange}\r\n// //             className=\"custom-control-input\"\r\n// //         />\r\n// //     );\r\n// // };\r\n// //\r\n// // export default function Test() {\r\n// //     const [checkedItems, setCheckedItems] = useState({});\r\n// //\r\n// //     const handleChange = event => {\r\n// //         setCheckedItems({\r\n// //             ...checkedItems,\r\n// //             [event.target.name]: event.target.checked\r\n// //         });\r\n// //     };\r\n// //\r\n// //     const prices = [\r\n// //         {\r\n// //             name: \"free\",\r\n// //             key: \"free\",\r\n// //             label: \"Безкоштовно\"\r\n// //         },\r\n// //         {\r\n// //             name: \"paid\",\r\n// //             key: \"paid\",\r\n// //             label: \"Платно\"\r\n// //         }\r\n// //     ];\r\n// //\r\n// //     return (\r\n// //         <div>\r\n// //             {props.checkboxes.map(item => (\r\n// //                 <div className=\"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\">\r\n// //                     <label key={item.key}>\r\n// //                         {item.name}\r\n// //                     </label>\r\n// //                     <Checkbox\r\n// //                         name={item.name}\r\n// //                         checked={checkedItems[item.name]}\r\n// //                         onChange={handleChange}\r\n// //                     />\r\n// //                 </div>\r\n// //             ))}\r\n// //         </div>\r\n// //     );\r\n// // };\r\n// //\r\n// //\r\n// //\r\n// // // import { useState, useEffect } from \"react\";\r\n// // // import { useForm } from \"react-hook-form\";\r\n// // //\r\n// // // export default function Test() {\r\n// // //     const initialValues = {username: \"\", email: \"\", password: \"\"};\r\n// // //     const [formValues, setFormValues] = useState(initialValues);\r\n// // //     const [formErrors, setFormErrors] = useState({});\r\n// // //     const [isSubmit, setIsSubmit] = useState(false);\r\n// // //\r\n// // //     const handleChange = (e) => {\r\n// // //         const {name, value} = e.target;\r\n// // //         setFormValues({...formValues, [name]: value});\r\n// // //     }\r\n// // //\r\n// // //     const handleSubmit = (e) => {\r\n// // //         e.preventDefault();\r\n// // //         setFormErrors(validate(formValues));\r\n// // //         setIsSubmit(true);\r\n// // //     }\r\n// // //\r\n// // //     useEffect(() => {\r\n// // //         if(Object.keys(formErrors).length === 0 && isSubmit){\r\n// // //             console.log(formValues);\r\n// // //         }\r\n// // //     }, [formErrors]);\r\n// // //\r\n// // //     const validate = (values) =>{\r\n// // //         const errors = {};\r\n// // //         const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n// // //         if(!values.username){\r\n// // //             errors.username = \"username required\";\r\n// // //         }\r\n// // //         if(!values.email){\r\n// // //             errors.email = \"email required\";\r\n// // //         } else if (!regex.test(values.email)){\r\n// // //             errors.email = \"Цей email некоректний\"\r\n// // //         }\r\n// // //         if(!values.password){\r\n// // //             errors.password = \"password required\";\r\n// // //         } else if (values.password < 4){\r\n// // //             errors.password = \"Цей пароль занадто короткий\";\r\n// // //         }\r\n// // //         else if (values.password > 10){\r\n// // //             errors.password = \"Цей пароль занадто довгий\";\r\n// // //         }\r\n// // //         return errors;\r\n// // //     }\r\n// // //\r\n// // //     return (\r\n// // //         <div className=\"container\">\r\n// // //             <pre>{JSON.stringify(formValues, undefined, 2)}</pre>\r\n// // //             <form onSubmit={handleSubmit}>\r\n// // //                 <h1>Registration Form</h1>\r\n// // //                 <div className=\"ui divider\"></div>\r\n// // //                 <div className=\"ui form\">\r\n// // //                     <div className=\"field\">\r\n// // //                         <label>Username</label>\r\n// // //                         <input\r\n// // //                             type=\"text\"\r\n// // //                             name=\"username\"\r\n// // //                             className={\r\n// // //                                 (formErrors.username && isSubmit) ?\r\n// // //                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n// // //                             }\r\n// // //                             placeholder=\"Username\"\r\n// // //                             value={formValues.username}\r\n// // //                             onChange={handleChange}\r\n// // //                         />\r\n// // //                     </div>\r\n// // //                     <p>{formErrors.username}</p>\r\n// // //                     <div className=\"field\">\r\n// // //                         <label>Email</label>\r\n// // //                         <input\r\n// // //                             type=\"email\"\r\n// // //                             name=\"email\"\r\n// // //                             className={\r\n// // //                                 (formErrors.email && isSubmit) ?\r\n// // //                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n// // //                             }\r\n// // //                             placeholder=\"Email\"\r\n// // //                             value={formValues.email}\r\n// // //                             onChange={handleChange}\r\n// // //                         />\r\n// // //                     </div>\r\n// // //                     <p>{formErrors.email}</p>\r\n// // //                     <div className=\"field\">\r\n// // //                         <label>Password</label>\r\n// // //                         <input\r\n// // //                             type=\"password\"\r\n// // //                             name=\"password\"\r\n// // //                             placeholder=\"Password\"\r\n// // //                             className={\r\n// // //                                 (formErrors.password && isSubmit) ?\r\n// // //                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n// // //                             }\r\n// // //                             value={formValues.password}\r\n// // //                             onChange={handleChange}\r\n// // //                         />\r\n// // //                     </div>\r\n// // //                     <p>{formErrors.password}</p>\r\n// // //                     <button className=\"fluid ui button blue\">Submit</button>\r\n// // //                 </div>\r\n// // //             </form>\r\n// // //         </div>\r\n// // //     );\r\n// // // }"]},"metadata":{},"sourceType":"module"}