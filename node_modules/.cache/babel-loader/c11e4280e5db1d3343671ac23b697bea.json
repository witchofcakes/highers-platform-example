{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\candidate\\\\DropzoneResume.js\";\nimport React, { useState } from 'react';\nimport { DropzoneComponent } from 'react-dropzone-component'; // import 'dropzone/dist/dropzone.css';\n\nimport 'react-dropzone-component/styles/filepicker.css'; // import { employees_resumes, storage } from '../../../../configs/google/firebase/index';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BytesToMegaBytes = size => +(size * 1e-6).toFixed(2);\n\n_c = BytesToMegaBytes;\nexport default function DropzoneResume() {\n  var ReactDOMServer = require('react-dom/server'); // ({\n  //                             // Data\n  //                             jobName,\n  //                             errorFields,\n  //                             errorStatus,\n  //                             // OnChange Events\n  //                             onChange\n  //                         }) => {\n  //     const [state, setState] = useState({\n  //         progress: null\n  //     });\n\n\n  const djsConfig = {\n    autoProcessQueue: false,\n    maxFiles: 1,\n    // progress: null,\n    dictDefaultMessage: 'Перетягни файл або клікни тут, щоб завантажити',\n    dictResponseError: 'Файл не завантажується :( Напиши нам у Telegram, ми одразу вирішимо проблему.',\n    dictMaxFilesExceeded: 'Тільки один файл. Видали попередні, щоб завантажити новий.',\n    dictRemoveFile: 'Видалити файл',\n    dictCancelUpload: 'Відмінити',\n    dictUploadCanceled: 'Відмінилось',\n    dictInvalidFileType: 'Такий тип файлу не підтримується',\n    dictFallbackMessage: 'Твій браузер не підтримує drag&drop. Напиши нам у Telegram, ми одразу вирішимо проблему.',\n    dictFallbackText: 'Щось тут не так :( Напиши нам у Telegram, ми одразу вирішимо проблему.',\n    dictFileTooBig: 'Файл занадто великий. Максимальний розмір 10Мб. Скористайся сервісами для зниження якості файлу.',\n    dictCancelUploadConfirmation: 'Точно відмінити завантаження?',\n    addRemoveLinks: true,\n    maxFilesize: 10,\n    previewTemplate: ReactDOMServer.renderToStaticMarkup( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dz-preview dz-file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dz-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dz-filename\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-dz-name\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-dz-thumbnail\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dz-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dz-upload\",\n          \"data-dz-uploadprogress\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dz-success-mark\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dz-error-mark\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2718\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dz-error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-dz-errormessage\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this))\n  };\n  const componentConfig = {\n    iconFiletypes: ['.jpg', '.png', '.gif', '.pdf', '.doc', '.docx'],\n    showFiletypeIcon: false,\n    postUrl: 'no-url'\n  };\n  let dropzone = null; // /* Delegate the task in the Firebase method */\n  // const onSendResume = file => onFirebaseSave(file);\n  //\n  // const onFirebaseSave = file => {\n  //     /* Save current timeString */\n  //     const\n  //         timeString = new Date().toISOString(),\n  //         fileName = file.name,\n  //         fileSize = BytesToMegaBytes(file.size),\n  //         fileNameFirebase = `${timeString}-${jobName}-${fileName}`;\n  //     /* Upload task in Firebase engine */\n  //     const uploadTask = storage\n  //         .ref(`${employees_resumes}`)\n  //         .child(fileNameFirebase)\n  //         .put(file);\n  //     /* Push the data in the storage */\n  //     uploadTask.on(\n  //         'state_changed',\n  //         async snapshot => {\n  //             // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n  //             setState({\n  //                 ...state,\n  //                 progress: (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n  //             });\n  //         },\n  //         err => {\n  //             console.log(err);\n  //             // A full list of error codes is available at\n  //             // https://firebase.google.com/docs/storage/web/handle-errors\n  //         },\n  //         complete => {\n  //             storage\n  //                 .ref(employees_resumes)\n  //                 .child(fileNameFirebase)\n  //                 .getDownloadURL()\n  //                 .then(url => {\n  //                     onChange({\n  //                         fileData: url,\n  //                         fileName: fileName,\n  //                         fileSize: fileSize\n  //                     });\n  //                 });\n  //         },\n  //     );\n  // };\n  //\n  // const onRemoveResume = file => {\n  //     /* Set the <unknown> filename and null file data to the resume params */\n  //     onChange({\n  //         fileName: \"<unknown>\",\n  //         fileSize: null,\n  //         fileData: null,\n  //     });\n  // };\n  //\n  // // For a list of all possible events (there are many), see README.md!\n  // const eventHandlers = {\n  //     init: dz => (dropzone = dz),\n  //     drop: [\n  //         // If you want to attach multiple callbacks, simply\n  //         // create an array filled with all your callbacks.\n  //     ],\n  //     addedfile: file => onSendResume(file),\n  //     complete: file => onSendResume(file),\n  //     removedfile: file => onRemoveResume(file)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropzone-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(DropzoneComponent, {\n      config: componentConfig // className={(() => {\n      //     return errorFields.includes('fileData') &&\n      //     errorStatus >= 400\n      //         ? 'required-field'\n      //         : null;\n      // })()}\n      // eventHandlers={eventHandlers}\n      ,\n      djsConfig: djsConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n_c2 = DropzoneResume;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BytesToMegaBytes\");\n$RefreshReg$(_c2, \"DropzoneResume\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/candidate/DropzoneResume.js"],"names":["React","useState","DropzoneComponent","BytesToMegaBytes","size","toFixed","DropzoneResume","ReactDOMServer","require","djsConfig","autoProcessQueue","maxFiles","dictDefaultMessage","dictResponseError","dictMaxFilesExceeded","dictRemoveFile","dictCancelUpload","dictUploadCanceled","dictInvalidFileType","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictCancelUploadConfirmation","addRemoveLinks","maxFilesize","previewTemplate","renderToStaticMarkup","componentConfig","iconFiletypes","showFiletypeIcon","postUrl","dropzone"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { DropzoneComponent } from 'react-dropzone-component';\r\n\r\n// import 'dropzone/dist/dropzone.css';\r\nimport 'react-dropzone-component/styles/filepicker.css';\r\n\r\n// import { employees_resumes, storage } from '../../../../configs/google/firebase/index';\r\n\r\nconst BytesToMegaBytes = (size) => +((size * 1e-6).toFixed(2));\r\n\r\n\r\nexport default function DropzoneResume() {\r\n    var ReactDOMServer = require('react-dom/server');\r\n// ({\r\n//                             // Data\r\n//                             jobName,\r\n//                             errorFields,\r\n//                             errorStatus,\r\n//                             // OnChange Events\r\n//                             onChange\r\n//                         }) => {\r\n//     const [state, setState] = useState({\r\n//         progress: null\r\n//     });\r\n\r\n    const djsConfig = {\r\n        autoProcessQueue: false,\r\n        maxFiles: 1,\r\n        // progress: null,\r\n        dictDefaultMessage: 'Перетягни файл або клікни тут, щоб завантажити',\r\n        dictResponseError:\r\n            'Файл не завантажується :( Напиши нам у Telegram, ми одразу вирішимо проблему.',\r\n        dictMaxFilesExceeded: 'Тільки один файл. Видали попередні, щоб завантажити новий.',\r\n        dictRemoveFile: 'Видалити файл',\r\n        dictCancelUpload: 'Відмінити',\r\n        dictUploadCanceled: 'Відмінилось',\r\n        dictInvalidFileType: 'Такий тип файлу не підтримується',\r\n        dictFallbackMessage:\r\n            'Твій браузер не підтримує drag&drop. Напиши нам у Telegram, ми одразу вирішимо проблему.',\r\n        dictFallbackText:\r\n            'Щось тут не так :( Напиши нам у Telegram, ми одразу вирішимо проблему.',\r\n        dictFileTooBig:\r\n            'Файл занадто великий. Максимальний розмір 10Мб. Скористайся сервісами для зниження якості файлу.',\r\n        dictCancelUploadConfirmation: 'Точно відмінити завантаження?',\r\n        addRemoveLinks: true,\r\n        maxFilesize: 10,\r\n        previewTemplate: ReactDOMServer.renderToStaticMarkup(\r\n            <div className=\"dz-preview dz-file-preview\">\r\n                <div className=\"dz-details\">\r\n                    <div className=\"dz-filename\"><span data-dz-name=\"true\"></span></div>\r\n                    <img data-dz-thumbnail=\"true\" />\r\n                </div>\r\n                <div className=\"dz-progress\"><span className=\"dz-upload\" data-dz-uploadprogress=\"true\"></span></div>\r\n                <div className=\"dz-success-mark\"><span>✔</span></div>\r\n                <div className=\"dz-error-mark\"><span>✘</span></div>\r\n                <div className=\"dz-error-message\"><span data-dz-errormessage=\"true\"></span></div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const componentConfig = {\r\n        iconFiletypes: ['.jpg', '.png', '.gif', '.pdf', '.doc', '.docx'],\r\n        showFiletypeIcon: false,\r\n        postUrl: 'no-url',\r\n    };\r\n\r\n    let dropzone = null;\r\n\r\n    // /* Delegate the task in the Firebase method */\r\n    // const onSendResume = file => onFirebaseSave(file);\r\n    //\r\n    // const onFirebaseSave = file => {\r\n    //     /* Save current timeString */\r\n    //     const\r\n    //         timeString = new Date().toISOString(),\r\n    //         fileName = file.name,\r\n    //         fileSize = BytesToMegaBytes(file.size),\r\n    //         fileNameFirebase = `${timeString}-${jobName}-${fileName}`;\r\n    //     /* Upload task in Firebase engine */\r\n    //     const uploadTask = storage\r\n    //         .ref(`${employees_resumes}`)\r\n    //         .child(fileNameFirebase)\r\n    //         .put(file);\r\n    //     /* Push the data in the storage */\r\n    //     uploadTask.on(\r\n    //         'state_changed',\r\n    //         async snapshot => {\r\n    //             // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n    //             setState({\r\n    //                 ...state,\r\n    //                 progress: (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n    //             });\r\n    //         },\r\n    //         err => {\r\n    //             console.log(err);\r\n    //             // A full list of error codes is available at\r\n    //             // https://firebase.google.com/docs/storage/web/handle-errors\r\n    //         },\r\n    //         complete => {\r\n    //             storage\r\n    //                 .ref(employees_resumes)\r\n    //                 .child(fileNameFirebase)\r\n    //                 .getDownloadURL()\r\n    //                 .then(url => {\r\n    //                     onChange({\r\n    //                         fileData: url,\r\n    //                         fileName: fileName,\r\n    //                         fileSize: fileSize\r\n    //                     });\r\n    //                 });\r\n    //         },\r\n    //     );\r\n    // };\r\n    //\r\n    // const onRemoveResume = file => {\r\n    //     /* Set the <unknown> filename and null file data to the resume params */\r\n    //     onChange({\r\n    //         fileName: \"<unknown>\",\r\n    //         fileSize: null,\r\n    //         fileData: null,\r\n    //     });\r\n    // };\r\n    //\r\n    // // For a list of all possible events (there are many), see README.md!\r\n    // const eventHandlers = {\r\n    //     init: dz => (dropzone = dz),\r\n    //     drop: [\r\n    //         // If you want to attach multiple callbacks, simply\r\n    //         // create an array filled with all your callbacks.\r\n    //     ],\r\n    //     addedfile: file => onSendResume(file),\r\n    //     complete: file => onSendResume(file),\r\n    //     removedfile: file => onRemoveResume(file)\r\n    // };\r\n\r\n    return (\r\n        <div className=\"dropzone-wrapper\">\r\n            <DropzoneComponent\r\n                config={componentConfig}\r\n                // className={(() => {\r\n                //     return errorFields.includes('fileData') &&\r\n                //     errorStatus >= 400\r\n                //         ? 'required-field'\r\n                //         : null;\r\n                // })()}\r\n                // eventHandlers={eventHandlers}\r\n                djsConfig={djsConfig}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}