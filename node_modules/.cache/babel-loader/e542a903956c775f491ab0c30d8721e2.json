{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\helpers\\\\tester.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  var _errors$username, _errors$email, _errors$password;\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n  };\n\n  const validate = values => {\n    const errors = {}; // const regex = /^[^\\s@]+@\n\n    if (!values.username) {\n      errors.username = \"username required\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userInfo, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            ref: register({\n              required: \"Username is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            ref: register({\n              required: \"Email is required\",\n              pattern: {\n                value: /^\\S+@\\S+$/i,\n                message: \"This is not a valid email\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            ref: register({\n              required: \"Password is required\",\n              minLength: {\n                value: 4,\n                message: \"Password must be more than 4 characters\"\n              },\n              maxLength: {\n                value: 10,\n                message: \"Password cannot exceed more than 10 characters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fluid ui button blue\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"Lo4ILp5PMVFbYS/PHA2ocdZK9lk=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/helpers/tester.js"],"names":["useState","useForm","Test","initialValues","username","email","password","formValues","setFormValues","formErrors","setFormErrors","handleChange","e","name","value","target","handleSubmit","preventDefault","validate","values","errors","JSON","stringify","userInfo","undefined","onSubmit","register","required","message","pattern","minLength","maxLength"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function Test() {\r\n    const initialValues = {username: \"\", email: \"\", password: \"\"};\r\n    const [formValues, setFormValues] = useState(initialValues);\r\n    const [formErrors, setFormErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setFormValues({...formValues, [name]: value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setFormErrors(validate(formValues));\r\n    }\r\n\r\n    const validate = (values) =>{\r\n        const errors = {};\r\n        // const regex = /^[^\\s@]+@\r\n        if(!values.username){\r\n            errors.username = \"username required\";\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <pre>{JSON.stringify(userInfo, undefined, 2)}</pre>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1>Registration Form</h1>\r\n                <div className=\"ui divider\"></div>\r\n                <div className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            ref={register({ required: \"Username is required\" })}\r\n                        />\r\n                    </div>\r\n                    <p>{errors.username?.message}</p>\r\n                    <div className=\"field\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            ref={register({\r\n                                required: \"Email is required\",\r\n                                pattern: {\r\n                                    value: /^\\S+@\\S+$/i,\r\n                                    message: \"This is not a valid email\",\r\n                                },\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <p>{errors.email?.message}</p>\r\n                    <div className=\"field\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            ref={register({\r\n                                required: \"Password is required\",\r\n                                minLength: {\r\n                                    value: 4,\r\n                                    message: \"Password must be more than 4 characters\",\r\n                                },\r\n                                maxLength: {\r\n                                    value: 10,\r\n                                    message: \"Password cannot exceed more than 10 characters\",\r\n                                },\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <p>{errors.password?.message}</p>\r\n                    <button className=\"fluid ui button blue\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}