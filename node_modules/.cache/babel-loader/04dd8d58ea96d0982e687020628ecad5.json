{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\selectForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { default as ReactSelect } from \"react-select\";\nimport { components } from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-form\",\n        children: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Option;\nexport default function SelectForm(props) {\n  _s();\n\n  const [optionSelected, setOptionSelected] = useState(null);\n  const colourOptions = [{\n    value: \"ocean\",\n    label: \"hello\"\n  }, {\n    value: \"blue\"\n  }, {\n    value: \"purple\"\n  }, {\n    value: \"red\"\n  }, {\n    value: \"orange\"\n  }, {\n    value: \"yellow\"\n  }, {\n    value: \"green\"\n  }, {\n    value: \"forest\"\n  }, {\n    value: \"slate\"\n  }, {\n    value: \"silver\"\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"d-inline-block\",\n      \"data-toggle\": \"popover\",\n      \"data-trigger\": \"focus\",\n      children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n        options: colourOptions,\n        isMulti: true,\n        closeMenuOnSelect: false,\n        hideSelectedOptions: false,\n        components: {\n          Option\n        },\n        onChange: selected => setOptionSelected(selected),\n        allowSelectAll: false,\n        value: optionSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectForm, \"KQckopHeCl9g+KKpW6VnNG1iD+U=\");\n\n_c2 = SelectForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Option\");\n$RefreshReg$(_c2, \"SelectForm\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/selectForm.js"],"names":["React","Component","useState","default","ReactSelect","components","Option","props","isSelected","value","SelectForm","optionSelected","setOptionSelected","colourOptions","label","title","selected"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,cAAvC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,sBACI;AAAA,2BACI,QAAC,UAAD,CAAY,MAAZ,OAAuBA,KAAvB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAEA,KAAK,CAACC,UAFnB;AAGI,QAAA,QAAQ,EAAE,MAAM;AAHpB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,kBAA+BD,KAAK,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;KAAMH,M;AAeN,eAAe,SAASI,UAAT,CAAoBH,KAApB,EAA2B;AAAA;;AAEtC,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAMW,aAAa,GAAG,CAClB;AAAEJ,IAAAA,KAAK,EAAE,OAAT;AAAkBK,IAAAA,KAAK,EAAE;AAAzB,GADkB,EAElB;AAAEL,IAAAA,KAAK,EAAE;AAAT,GAFkB,EAGlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHkB,EAIlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJkB,EAKlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GALkB,EAMlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GANkB,EAOlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAPkB,EAQlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GARkB,EASlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GATkB,EAUlB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAVkB,CAAtB;AAaA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA,gBAAQF,KAAK,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,KAAK,EAAC,gBADV;AAEI,qBAAY,SAFhB;AAGI,sBAAa,OAHjB;AAAA,6BAKI,QAAC,WAAD;AACI,QAAA,OAAO,EAAEF,aADb;AAEI,QAAA,OAAO,MAFX;AAGI,QAAA,iBAAiB,EAAE,KAHvB;AAII,QAAA,mBAAmB,EAAE,KAJzB;AAKI,QAAA,UAAU,EAAE;AACRP,UAAAA;AADQ,SALhB;AAQI,QAAA,QAAQ,EAAGU,QAAD,IAAcJ,iBAAiB,CAACI,QAAD,CAR7C;AASI,QAAA,cAAc,EAAE,KATpB;AAUI,QAAA,KAAK,EAAEL;AAVX;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAzCuBD,U;;MAAAA,U","sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport { default as ReactSelect } from \"react-select\";\r\nimport { components } from \"react-select\";\r\n\r\nconst Option = (props) => {\r\n    return (\r\n        <div>\r\n            <components.Option {...props}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={props.isSelected}\r\n                    onChange={() => null}\r\n                />\r\n                <label className=\"label-form\">{props.value}</label>\r\n            </components.Option>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function SelectForm(props) {\r\n\r\n    const [optionSelected, setOptionSelected] = useState(null)\r\n\r\n    const colourOptions = [\r\n        { value: \"ocean\", label: \"hello\" },\r\n        { value: \"blue\" },\r\n        { value: \"purple\" },\r\n        { value: \"red\" },\r\n        { value: \"orange\" },\r\n        { value: \"yellow\" },\r\n        { value: \"green\" },\r\n        { value: \"forest\" },\r\n        { value: \"slate\" },\r\n        { value: \"silver\" }\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <label>{props.title}</label>\r\n            <span\r\n                class=\"d-inline-block\"\r\n                data-toggle=\"popover\"\r\n                data-trigger=\"focus\"\r\n            >\r\n                <ReactSelect\r\n                    options={colourOptions}\r\n                    isMulti\r\n                    closeMenuOnSelect={false}\r\n                    hideSelectedOptions={false}\r\n                    components={{\r\n                        Option\r\n                    }}\r\n                    onChange={(selected) => setOptionSelected(selected)}\r\n                    allowSelectAll={false}\r\n                    value={optionSelected}\r\n                />\r\n            </span>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}