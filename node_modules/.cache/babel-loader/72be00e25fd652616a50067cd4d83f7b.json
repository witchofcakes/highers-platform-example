{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\employer\\\\employerCreateVacancy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ChevronRight } from \"react-feather\";\nimport EmployerSwitch from \"./employerSwitch\";\nimport TextEditor from \"./textEditor\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport UploadAvatar from './employerLogoChoose';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateVacancy() {\n  _s();\n\n  const [showCity, setShowCity] = useState(false);\n  const validator = useRef(new SimpleReactValidator());\n  const [, forceUpdate] = useState();\n  const [state, setState] = useState({\n    employerName: '',\n    employerLogo: '',\n    employerDescription: '',\n    position: '',\n    category: '',\n    salary: '',\n    location: {\n      city: ''\n    },\n    vacancyDescription: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  function handleChangeInput(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    setState({\n      [name]: value\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(state));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.employerName) {\n      errors.employerName = \"username required\";\n    }\n\n    if (!values.employerDescription) {\n      errors.employerDescription = \"email required\";\n    }\n\n    if (!values.position) {\n      errors.position = \"password required\";\n    }\n\n    return errors;\n  }; // function handleSubmit(event){\n  //     event.preventDefault();\n  //     if (validator.current.allValid()) {\n  //         console.log(\"success\");\n  //     } else {\n  //         validator.current.showMessages();\n  //         forceUpdate(1);\n  //         console.log(\"not success\");\n  //     }\n  //\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container padding-top-bottom-cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employer-switch-container\",\n        children: /*#__PURE__*/_jsxDEV(EmployerSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10 col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-block-create\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0456\\u0457\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.employerName && isSubmit ? \"input-field height-unset error-border\" : \"input-field height-unset\",\n              name: \"employerName\",\n              type: \"text\",\n              value: state.employerName,\n              onChange: handleChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-block-create\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"\\u0427\\u0438\\u043C \\u0437\\u0430\\u0439\\u043C\\u0430\\u0454\\u0442\\u044C\\u0441\\u044F \\u0412\\u0430\\u0448\\u0430 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0456\\u044F?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"employerDescription\",\n              rows: \"4\",\n              className: formErrors.employerName && isSubmit ? \"input-field height-unset error-border\" : \"input-field height-unset\",\n              value: state.employerDescription,\n              onChange: handleChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-block-create\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0456\\u0457\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"position\",\n              className: formErrors.position && isSubmit ? \"input-field height-unset error-border\" : \"input-field height-unset\",\n              type: \"text\",\n              value: state.position,\n              onChange: handleChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-div-create-vacancy\",\n            onClick: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"black-button\",\n              children: \"\\u041D\\u0430\\u0434\\u0456\\u0441\\u043B\\u0430\\u0442\\u0438 \\u043D\\u0430 \\u043C\\u043E\\u0434\\u0435\\u0440\\u0430\\u0446\\u0456\\u044E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateVacancy, \"1hXTChw/cYqF5XY1FqxUyC1vIJc=\");\n\n_c = CreateVacancy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateVacancy\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/employer/employerCreateVacancy.js"],"names":["React","useEffect","useRef","useState","ChevronRight","EmployerSwitch","TextEditor","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","UploadAvatar","SimpleReactValidator","CreateVacancy","showCity","setShowCity","validator","forceUpdate","state","setState","employerName","employerLogo","employerDescription","position","category","salary","location","city","vacancyDescription","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChangeInput","event","target","value","type","checked","name","handleSubmit","e","preventDefault","validate","Object","keys","length","console","log","formValues","values","errors","regex"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {ChevronRight} from \"react-feather\"\r\nimport EmployerSwitch from \"./employerSwitch\"\r\nimport TextEditor from \"./textEditor\"\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport UploadAvatar from './employerLogoChoose'\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\nexport default function CreateVacancy() {\r\n\r\n    const [showCity, setShowCity] = useState(false)\r\n    const validator = useRef(new SimpleReactValidator());\r\n    const [, forceUpdate] = useState();\r\n\r\n    const [state, setState] = useState({\r\n        employerName: '',\r\n        employerLogo: '',\r\n        employerDescription: '',\r\n        position: '',\r\n        category: '',\r\n        salary: '',\r\n        location: {\r\n            city: ''\r\n        },\r\n        vacancyDescription: '',\r\n    })\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    function handleChangeInput(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        setState({[name]: value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setFormErrors(validate(state));\r\n        setIsSubmit(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(formErrors).length === 0 && isSubmit){\r\n            console.log(formValues);\r\n        }\r\n    }, [formErrors]);\r\n\r\n    const validate = (values) =>{\r\n        const errors = {};\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n        if(!values.employerName){\r\n            errors.employerName = \"username required\";\r\n        }\r\n        if(!values.employerDescription){\r\n            errors.employerDescription = \"email required\";\r\n        }\r\n        if(!values.position){\r\n            errors.position = \"password required\";\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    // function handleSubmit(event){\r\n    //     event.preventDefault();\r\n    //     if (validator.current.allValid()) {\r\n    //         console.log(\"success\");\r\n    //     } else {\r\n    //         validator.current.showMessages();\r\n    //         forceUpdate(1);\r\n    //         console.log(\"not success\");\r\n    //     }\r\n    //\r\n    // }\r\n\r\n    return(\r\n        <div className=\"container padding-top-bottom-cabinet\">\r\n            <div className=\"row center-row\">\r\n                <div className=\"employer-switch-container\">\r\n                    <EmployerSwitch/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-row\">\r\n                <div className=\"col-12 col-md-10 col-lg-8\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-block-create\">\r\n                            <label className=\"form-label\">\r\n                                Назва компанії\r\n                            </label>\r\n                            <input\r\n                                className={\r\n                                    (formErrors.employerName && isSubmit) ?\r\n                                        \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n                                }\r\n                                name=\"employerName\"\r\n                                type=\"text\"\r\n                                value={state.employerName}\r\n                                onChange={handleChangeInput}\r\n                            />\r\n                            {/*{validator.current.message('employerName', state.employerName, 'required|employerName', {messages: {required: 'Заповніть назву компанії'}, className: 'error-text'})}*/}\r\n                        </div>\r\n                        {/*<div className=\"form-block-create\">*/}\r\n                        {/*    <label className=\"form-label\">*/}\r\n                        {/*        Логотип компанії*/}\r\n                        {/*    </label>*/}\r\n                        {/*    <div className=\"upload-picture\">*/}\r\n                        {/*        /!*<UploadAvatar/>*!/*/}\r\n                        {/*    </div>*/}\r\n                        {/*</div>*/}\r\n                        <div className=\"form-block-create\">\r\n                            <label className=\"form-label\">\r\n                                Чим займається Ваша компанія?\r\n                            </label>\r\n                            <textarea\r\n                                name=\"employerDescription\"\r\n                                rows=\"4\"\r\n                                className={\r\n                                    (formErrors.employerName && isSubmit) ?\r\n                                        \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n                                }\r\n                                value={state.employerDescription}\r\n                                onChange={handleChangeInput}\r\n                            />\r\n                            {/*{validator.current.message('employerDescription', state.employerDescription, 'required|max:120|employerDescription',*/}\r\n                            {/*    {*/}\r\n                            {/*        messages: {*/}\r\n                            {/*            required: 'Заповніть опис компанії',*/}\r\n                            {/*            max: 'Опис компанії не має перевищувати 120 символів'*/}\r\n                            {/*        },*/}\r\n                            {/*        className: 'error-text'*/}\r\n                            {/*    }*/}\r\n                            {/*)}*/}\r\n                        </div>\r\n                        <div className=\"form-block-create\">\r\n                            <label className=\"form-label\">\r\n                                Назва позиції\r\n                            </label>\r\n                            <input\r\n                                name=\"position\"\r\n                                className={\r\n                                    (formErrors.position && isSubmit) ?\r\n                                        \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n                                }\r\n                                type=\"text\"\r\n                                value={state.position}\r\n                                onChange={handleChangeInput}\r\n                            />\r\n                            {/*{validator.current.message('position', state.employerDescription, 'required|position',*/}\r\n                            {/*    {*/}\r\n                            {/*        messages: {*/}\r\n                            {/*            required: 'Заповніть назву позиції',*/}\r\n                            {/*        },*/}\r\n                            {/*        className: 'error-text'*/}\r\n                            {/*    }*/}\r\n                            {/*)}*/}\r\n                        </div>\r\n                        {/*<div className=\"form-block-create\">*/}\r\n                        {/*    <label className=\"form-label\">*/}\r\n                        {/*        Категорія*/}\r\n                        {/*    </label>*/}\r\n                        {/*    <input*/}\r\n                        {/*        className=\"input-field\"*/}\r\n                        {/*        type=\"text\"*/}\r\n                        {/*    />*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"form-block-create\">*/}\r\n                        {/*    <label className=\"form-label\">*/}\r\n                        {/*        Зарплатня*/}\r\n                        {/*    </label>*/}\r\n                        {/*    <input*/}\r\n                        {/*        className=\"input-field\"*/}\r\n                        {/*        type=\"text\"*/}\r\n                        {/*        placeholder=\"Приклад: 10 000 або 10 000-15 000\"*/}\r\n                        {/*        value={state.salary}*/}\r\n                        {/*        onChange={handleChangeInput}*/}\r\n                        {/*    />*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"form-block-create\">*/}\r\n                        {/*    <label name=\"location\" className=\"form-label\">*/}\r\n                        {/*        Локація*/}\r\n                        {/*    </label>*/}\r\n                        {/*    <RadioGroup*/}\r\n                        {/*        aria-label=\"location\"*/}\r\n                        {/*        name=\"location\"*/}\r\n                        {/*        value={state.location}*/}\r\n                        {/*    >*/}\r\n                        {/*        <div className=\"radio-button-div\" onClick={()=>setShowCity(false)}>*/}\r\n                        {/*            <FormControlLabel*/}\r\n                        {/*                value=\"remote\"*/}\r\n                        {/*                control={<Radio />}*/}\r\n                        {/*                label=\"Віддалено\"*/}\r\n                        {/*            />*/}\r\n                        {/*        </div>*/}\r\n                        {/*        <div className=\"radio-button-div\" onClick={()=>setShowCity(true)}>*/}\r\n                        {/*            <FormControlLabel*/}\r\n                        {/*                value=\"office\"*/}\r\n                        {/*                control={<Radio />}*/}\r\n                        {/*                label=\"В офісі\"*/}\r\n                        {/*            />*/}\r\n                        {/*            {*/}\r\n                        {/*                showCity &&*/}\r\n                        {/*                    <React.Fragment>*/}\r\n                        {/*                        <input*/}\r\n                        {/*                            name=\"locationCity\"*/}\r\n                        {/*                            className=\"input-field\"*/}\r\n                        {/*                            type=\"text\"*/}\r\n                        {/*                            value={state.location.city}*/}\r\n                        {/*                            onChange={handleChangeInput}*/}\r\n                        {/*                        />*/}\r\n                        {/*                        {validator.current.message('locationCity', state.location.city, 'required|locationCity',*/}\r\n                        {/*                            {*/}\r\n                        {/*                                messages: {*/}\r\n                        {/*                                    required: 'Вкажіть в якому місті розташований офіс компанії',*/}\r\n                        {/*                                },*/}\r\n                        {/*                                className: 'error-text'*/}\r\n                        {/*                            }*/}\r\n                        {/*                        )}*/}\r\n                        {/*                    </React.Fragment>*/}\r\n                        {/*            }*/}\r\n                        {/*        </div>*/}\r\n                        {/*    </RadioGroup>*/}\r\n\r\n                        {/*    {validator.current.message('location', state.location, 'required|location',*/}\r\n                        {/*        {*/}\r\n                        {/*            messages: {*/}\r\n                        {/*                required: 'Оберіть локацію, де працюватиме кандидат',*/}\r\n                        {/*            },*/}\r\n                        {/*            className: 'error-text'*/}\r\n                        {/*        }*/}\r\n                        {/*    )}*/}\r\n\r\n                        {/*</div>*/}\r\n\r\n                        {/*<div className=\"form-block-create\">*/}\r\n                        {/*    <label className=\"form-label\">*/}\r\n                        {/*        Опис вакансії: задачі, вимоги, умови*/}\r\n                        {/*    </label>*/}\r\n                        {/*    <TextEditor/>*/}\r\n                        {/*</div>*/}\r\n                        <div className=\"button-div-create-vacancy\" onClick={handleSubmit}>\r\n                            <button className=\"black-button\">\r\n                                Надіслати на модерацію\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}