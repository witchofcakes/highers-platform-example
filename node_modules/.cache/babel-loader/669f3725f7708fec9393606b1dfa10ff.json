{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\tester.js\";\nimport React from \"react\";\nimport { Download } from \"react-feather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = [{\n  id: 1,\n  selected: false,\n  name: \"Анна Коноваленко\",\n  resume: \"Resume_1.pdf\",\n  contact: \"sincere@april.biz\",\n  date: \"28.10\"\n}, {\n  id: 2,\n  selected: false,\n  name: \"Анна Коноваленко\",\n  resume: \"Resume_1.pdf\",\n  contact: \"sincere@april.biz\",\n  date: \"28.10\"\n}, {\n  id: 3,\n  selected: false,\n  name: \"Анна Коноваленко\",\n  resume: \"Resume_1.pdf\",\n  contact: \"sincere@april.biz\",\n  date: \"28.10\"\n}, {\n  id: 5,\n  selected: false,\n  name: \"Анна Коноваленко\",\n  resume: \"Resume_1.pdf\",\n  contact: \"sincere@april.biz\",\n  date: \"28.10\"\n}];\nexport default class Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      List: Users,\n      MasterChecked: false,\n      SelectedList: []\n    };\n  } // Select/ UnSelect Table rows\n\n\n  onMasterCheck(e) {\n    let tempList = this.state.List; // Check/ UnCheck All Items\n\n    tempList.map(user => user.selected = e.target.checked); //Update State\n\n    this.setState({\n      MasterChecked: e.target.checked,\n      List: tempList,\n      SelectedList: this.state.List.filter(e => e.selected)\n    });\n  } // Update List Item's state and Master Checkbox State\n\n\n  onItemCheck(e, item) {\n    let tempList = this.state.List;\n    tempList.map(user => {\n      if (user.id === item.id) {\n        user.selected = e.target.checked;\n      }\n\n      return user;\n    }); //To Control Master Checkbox State\n\n    const totalItems = this.state.List.length;\n    const totalCheckedItems = tempList.filter(e => e.selected).length; // Update State\n\n    this.setState({\n      MasterChecked: totalItems === totalCheckedItems,\n      List: tempList,\n      SelectedList: this.state.List.filter(e => e.selected)\n    });\n  } // Event to get selected rows(Optional)\n\n\n  getSelectedRows() {\n    this.setState({\n      SelectedList: this.state.List.filter(e => e.selected)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"title-table-text\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                checked: this.state.MasterChecked,\n                id: \"mastercheck\",\n                onChange: e => this.onMasterCheck(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"title-table-text\",\n              children: \"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435 \\u0442\\u0430 \\u0456\\u043C'\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"title-table-text\",\n              children: \"\\u0420\\u0435\\u0437\\u044E\\u043C\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"title-table-text\",\n              children: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"title-table-text\",\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0434\\u0430\\u0447\\u0456\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.List.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: user.selected ? \"table-row-line selected\" : \"table-row-line\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: user.selected,\n                id: \"rowcheck{user.id}\",\n                onChange: e => this.onItemCheck(e, user)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-table-text\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-table-text\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"resume-table-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 18,\n                  color: \"var(--black\",\n                  className: \"download-employer-applies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this), user.resume]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-table-text\",\n              children: user.contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-table-text\",\n              children: user.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => this.getSelectedRows(),\n        children: [\"Get Selected Items \", this.state.SelectedList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/tester.js"],"names":["React","Download","Users","id","selected","name","resume","contact","date","Test","Component","constructor","props","state","List","MasterChecked","SelectedList","onMasterCheck","e","tempList","map","user","target","checked","setState","filter","onItemCheck","item","totalItems","length","totalCheckedItems","getSelectedRows","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Download} from \"react-feather\"\r\n\r\nconst Users = [\r\n    {\r\n        id: 1,\r\n        selected: false,\r\n        name: \"Анна Коноваленко\",\r\n        resume: \"Resume_1.pdf\",\r\n        contact: \"sincere@april.biz\",\r\n        date: \"28.10\"\r\n    },\r\n    {\r\n        id: 2,\r\n        selected: false,\r\n        name: \"Анна Коноваленко\",\r\n        resume: \"Resume_1.pdf\",\r\n        contact: \"sincere@april.biz\",\r\n        date: \"28.10\"\r\n    },\r\n    {\r\n        id: 3,\r\n        selected: false,\r\n        name: \"Анна Коноваленко\",\r\n        resume: \"Resume_1.pdf\",\r\n        contact: \"sincere@april.biz\",\r\n        date: \"28.10\"\r\n    },\r\n    {\r\n        id: 5,\r\n        selected: false,\r\n        name: \"Анна Коноваленко\",\r\n        resume: \"Resume_1.pdf\",\r\n        contact: \"sincere@april.biz\",\r\n        date: \"28.10\"\r\n    },\r\n];\r\n\r\nexport default class Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            List: Users,\r\n            MasterChecked: false,\r\n            SelectedList: [],\r\n        };\r\n    }\r\n\r\n    // Select/ UnSelect Table rows\r\n    onMasterCheck(e) {\r\n        let tempList = this.state.List;\r\n        // Check/ UnCheck All Items\r\n        tempList.map((user) => (user.selected = e.target.checked));\r\n\r\n        //Update State\r\n        this.setState({\r\n            MasterChecked: e.target.checked,\r\n            List: tempList,\r\n            SelectedList: this.state.List.filter((e) => e.selected),\r\n        });\r\n    }\r\n\r\n    // Update List Item's state and Master Checkbox State\r\n    onItemCheck(e, item) {\r\n        let tempList = this.state.List;\r\n        tempList.map((user) => {\r\n            if (user.id === item.id) {\r\n                user.selected = e.target.checked;\r\n            }\r\n            return user;\r\n        });\r\n\r\n        //To Control Master Checkbox State\r\n        const totalItems = this.state.List.length;\r\n        const totalCheckedItems = tempList.filter((e) => e.selected).length;\r\n\r\n        // Update State\r\n        this.setState({\r\n            MasterChecked: totalItems === totalCheckedItems,\r\n            List: tempList,\r\n            SelectedList: this.state.List.filter((e) => e.selected),\r\n        });\r\n    }\r\n\r\n    // Event to get selected rows(Optional)\r\n    getSelectedRows() {\r\n        this.setState({\r\n            SelectedList: this.state.List.filter((e) => e.selected),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                    <div className=\"table-div-container\">\r\n                        <table className=\"table-container\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"title-table-text\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        checked={this.state.MasterChecked}\r\n                                        id=\"mastercheck\"\r\n                                        onChange={(e) => this.onMasterCheck(e)}\r\n                                    />\r\n                                </th>\r\n                                <th scope=\"col\" className=\"title-table-text\">Прізвище та ім'я</th>\r\n                                <th scope=\"col\" className=\"title-table-text\">Резюме</th>\r\n                                <th scope=\"col\" className=\"title-table-text\">Контакти</th>\r\n                                <th scope=\"col\" className=\"title-table-text\">Дата подачі</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.List.map((user) => (\r\n                                <tr key={user.id} className={user.selected ? \"table-row-line selected\" : \"table-row-line\"}>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={user.selected}\r\n                                            id=\"rowcheck{user.id}\"\r\n                                            onChange={(e) => this.onItemCheck(e, user)}\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"td-table-text\">{user.name}</td>\r\n                                    <td className=\"td-table-text\">\r\n                                        <button className=\"resume-table-button\">\r\n                                            <Download size={18} color={\"var(--black\"} className={\"download-employer-applies\"}/>\r\n                                            {user.resume}\r\n                                        </button>\r\n                                    </td>\r\n                                    <td className=\"td-table-text\">{user.contact}</td>\r\n                                    <td className=\"td-table-text\">{user.date}</td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <button className=\"btn btn-primary\" onClick={() => this.getSelectedRows()}>\r\n                            Get Selected Items {this.state.SelectedList.length}\r\n                        </button>\r\n                        {/*<div className=\"row\">*/}\r\n                        {/*    <b>All Row Items:</b>*/}\r\n                        {/*    <code>{JSON.stringify(this.state.List)}</code>*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"row\">*/}\r\n                        {/*    <b>Selected Row Items(Click Button To Get):</b>*/}\r\n                        {/*    <code>{JSON.stringify(this.state.SelectedList)}</code>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}