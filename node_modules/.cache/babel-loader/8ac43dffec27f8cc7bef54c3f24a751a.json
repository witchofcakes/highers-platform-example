{"ast":null,"code":"// const range = len => {\n//     const arr = []\n//     for (let i = 0; i < len; i++) {\n//         arr.push(i)\n//     }\n//     return arr\n// }\n//\n// const newPerson = () => {\n//     const statusChance = Math.random()\n//     return {\n//         firstName: namor.generate({ words: 1, numbers: 0 }),\n//         lastName: namor.generate({ words: 1, numbers: 0 }),\n//         age: Math.floor(Math.random() * 30),\n//         visits: Math.floor(Math.random() * 100),\n//         progress: Math.floor(Math.random() * 100),\n//         status:\n//             statusChance > 0.66\n//                 ? 'relationship'\n//                 : statusChance > 0.33\n//                     ? 'complicated'\n//                     : 'single',\n//     }\n// }\n//\n// function makeData(...lens) {\n//     const makeDataLevel = (depth = 0) => {\n//         const len = lens[depth]\n//         return range(len).map(d => {\n//             return {\n//                 ...newPerson(),\n//                 subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n//             }\n//         })\n//     }\n//\n//     return makeDataLevel()\n// }","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/helpers/helpers.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const range = len => {\r\n//     const arr = []\r\n//     for (let i = 0; i < len; i++) {\r\n//         arr.push(i)\r\n//     }\r\n//     return arr\r\n// }\r\n//\r\n// const newPerson = () => {\r\n//     const statusChance = Math.random()\r\n//     return {\r\n//         firstName: namor.generate({ words: 1, numbers: 0 }),\r\n//         lastName: namor.generate({ words: 1, numbers: 0 }),\r\n//         age: Math.floor(Math.random() * 30),\r\n//         visits: Math.floor(Math.random() * 100),\r\n//         progress: Math.floor(Math.random() * 100),\r\n//         status:\r\n//             statusChance > 0.66\r\n//                 ? 'relationship'\r\n//                 : statusChance > 0.33\r\n//                     ? 'complicated'\r\n//                     : 'single',\r\n//     }\r\n// }\r\n//\r\n// function makeData(...lens) {\r\n//     const makeDataLevel = (depth = 0) => {\r\n//         const len = lens[depth]\r\n//         return range(len).map(d => {\r\n//             return {\r\n//                 ...newPerson(),\r\n//                 subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n//             }\r\n//         })\r\n//     }\r\n//\r\n//     return makeDataLevel()\r\n// }"]},"metadata":{},"sourceType":"module"}