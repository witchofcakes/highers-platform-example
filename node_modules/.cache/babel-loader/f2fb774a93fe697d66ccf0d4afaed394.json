{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\helpers\\\\tester.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [userInfo, setUserInfo] = useState();\n\n  const onSubmit = data => {\n    setUserInfo(data);\n    console.log(data);\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userInfo, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            ref: register({\n              required: \"Username is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            ref: register({\n              required: \"Password is required\",\n              minLength: {\n                value: 4,\n                message: \"Password must be more than 4 characters\"\n              },\n              maxLength: {\n                value: 10,\n                message: \"Password cannot exceed more than 10 characters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fluid ui button blue\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"YF9xNjZsT/POpotCGz8F1hD6J4g=\", false, function () {\n  return [useForm];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/helpers/tester.js"],"names":["useState","useForm","Test","register","handleSubmit","errors","userInfo","setUserInfo","onSubmit","data","console","log","JSON","stringify","undefined","required","username","message","minLength","value","maxLength","password"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCJ,OAAO,EAAlD;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;;AACA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AACvBF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,gBAAMO,IAAI,CAACC,SAAL,CAAeP,QAAf,EAAyBQ,SAAzB,EAAoC,CAApC;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEV,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,WAAW,EAAC,UAHhB;AAII,YAAA,GAAG,EAAEL,QAAQ,CAAC;AAAEY,cAAAA,QAAQ,EAAE;AAAZ,aAAD;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,wCAAIV,MAAM,CAACW,QAAX,qDAAI,iBAAiBC;AAArB;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAYI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,WAAW,EAAC,UAHhB;AAII,YAAA,GAAG,EAAEd,QAAQ,CAAC;AACVY,cAAAA,QAAQ,EAAE,sBADA;AAEVG,cAAAA,SAAS,EAAE;AACPC,gBAAAA,KAAK,EAAE,CADA;AAEPF,gBAAAA,OAAO,EAAE;AAFF,eAFD;AAMVG,cAAAA,SAAS,EAAE;AACPD,gBAAAA,KAAK,EAAE,EADA;AAEPF,gBAAAA,OAAO,EAAE;AAFF;AAND,aAAD;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eA+BI;AAAA,wCAAIZ,MAAM,CAACgB,QAAX,qDAAI,iBAAiBJ;AAArB;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAgCI;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAnDuBf,I;UACuBD,O;;;KADvBC,I","sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function Test() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [userInfo, setUserInfo] = useState();\r\n    const onSubmit = (data) => {\r\n        setUserInfo(data);\r\n        console.log(data);\r\n    };\r\n    console.log(errors);\r\n    return (\r\n        <div className=\"container\">\r\n            <pre>{JSON.stringify(userInfo, undefined, 2)}</pre>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1>Registration Form</h1>\r\n                <div className=\"ui divider\"></div>\r\n                <div className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            ref={register({ required: \"Username is required\" })}\r\n                        />\r\n                    </div>\r\n                    <p>{errors.username?.message}</p>\r\n                    \r\n                    <div className=\"field\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            ref={register({\r\n                                required: \"Password is required\",\r\n                                minLength: {\r\n                                    value: 4,\r\n                                    message: \"Password must be more than 4 characters\",\r\n                                },\r\n                                maxLength: {\r\n                                    value: 10,\r\n                                    message: \"Password cannot exceed more than 10 characters\",\r\n                                },\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <p>{errors.password?.message}</p>\r\n                    <button className=\"fluid ui button blue\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}