{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\src\\\\components\\\\employer\\\\employerLogoChoose.js\";\nimport React from 'react';\nimport ReactAvatarEditor from 'react-avatar-editor';\nimport Modal from '@mui/material/Modal';\nimport Backdrop from '@mui/material/Backdrop';\nimport Fade from '@mui/material/Fade';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadAvatar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewImage = evt => {\n      this.setState({\n        file: evt.target.files[0],\n        imageName: `${evt.target.files[0].name}-${new Date().toISOString()}`\n      });\n\n      if (evt.target.files[0]) {\n        this.handleOpen();\n      }\n    };\n\n    this.onScale = evt => {\n      this.setState({\n        scale: parseFloat(evt.target.value)\n      });\n    };\n\n    this.handlePositionChange = position => {\n      this.setState({\n        position\n      });\n    };\n\n    this.handleSetEditorRef = editor => {\n      this.setState({\n        editor\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleCrop = async () => {\n      if (this.state.editor) {\n        const urlBase64 = this.state.editor.getImageScaledToCanvas().toDataURL();\n        await this.setState({\n          imageData: urlBase64\n        });\n      }\n    };\n\n    this.state = {\n      file: null\n      /* Uploading file from the PC */\n      ,\n      imageName: null,\n      imageData: null,\n      preview: null,\n      open: false,\n      allowZoomOut: false,\n      position: {\n        x: 0.5,\n        y: 0.5\n      },\n      scale: 1,\n      rotate: 0,\n      borderRadius: 200,\n      width: 250,\n      height: 250,\n      value: 1,\n      progress: 0,\n      isLoading: false,\n      isError: false\n    };\n  } // componentWillMount() {}\n  //\n  // loadInFirebase = () => {\n  //     let uploadTask;\n  //     // If image base64 format was passed as a parameter\n  //     if (this.state.imageData) {\n  //         uploadTask = storage\n  //             .ref(vacancies_logotypes)\n  //             .child(this.state.imageName)\n  //             .putString(this.state.imageData, 'data_url', {\n  //                 contentType: 'image/png',\n  //             });\n  //     } else {\n  //         // If image blob was passed as a parameter\n  //         uploadTask = storage\n  //             .ref(vacancies_logotypes)\n  //             .child(this.state.imageName)\n  //             .put(this.state.file);\n  //     }\n  //\n  //     uploadTask.on(\n  //         'state_changed',\n  //         async snapshot => {\n  //             // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n  //             this.setState({\n  //                 progress: (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n  //             });\n  //         },\n  //         err => {\n  //             console.log(err);\n  //             // A full list of error codes is available at\n  //             // https://firebase.google.com/docs/storage/web/handle-errors\n  //         },\n  //         complete => {\n  //             storage\n  //                 .ref(vacancies_logotypes)\n  //                 .child(this.state.imageName)\n  //                 .getDownloadURL()\n  //                 .then(url => {\n  //                     /* Send the obtained data to the parent component */\n  //                     this.props.onChange(this.state.imageName, url);\n  //                     this.handleClose();\n  //                 });\n  //         },\n  //     );\n  // };\n\n\n  // handleSubmit = async evt => {\n  //     evt.preventDefault();\n  //     /* If any perturbations was done under file */\n  //     await this.handleCrop();\n  //     /* Load the perturbed file into the firebase */\n  //     this.loadInFirebase();\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apply-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"contained-button-file\",\n          type: \"file\",\n          name: \"file\",\n          multiple: true,\n          onChange: this.handleNewImage,\n          className: \"jss978\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          className: \"upload-button-big\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"upload-button\",\n            component: \"span\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: this.props.imageName,\n              src: this.props.imageData,\n              className: \"avatar-picture-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        \"aria-labelledby\": \"transition-modal-title-apply\",\n        \"aria-describedby\": \"transition-modal-description-apply\",\n        className: \"modal-upload\",\n        open: this.state.open,\n        onClose: this.handleClose,\n        closeAfterTransition: true,\n        BackdropComponent: Backdrop,\n        BackdropProps: {\n          timeout: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: this.state.open,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row modal-paper-upload\",\n            children: [/*#__PURE__*/_jsxDEV(ReactAvatarEditor, {\n              image: this.state.file,\n              scale: parseFloat(this.state.scale),\n              width: this.state.width,\n              height: this.state.height,\n              position: this.state.position,\n              onPositionChange: this.handlePositionChange,\n              rotate: parseFloat(this.state.rotate),\n              borderRadius: this.state.borderRadius,\n              ref: this.handleSetEditorRef,\n              className: \"editor-canvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 zoom-upload-div\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"scale\",\n                type: \"range\",\n                value: parseFloat(this.state.scale),\n                min: this.state.allowZoomOut ? '0.1' : '1',\n                max: \"2\",\n                step: \"0.01\",\n                onChange: this.onScale\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"save-upload-btn\",\n                  children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel-upload-btn\",\n                  onClick: this.handleClose,\n                  children: \"\\u0412\\u0456\\u0434\\u043C\\u0456\\u043D\\u0438\\u0442\\u0438\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/src/components/employer/employerLogoChoose.js"],"names":["React","ReactAvatarEditor","Modal","Backdrop","Fade","Button","Avatar","UploadAvatar","Component","constructor","props","handleNewImage","evt","setState","file","target","files","imageName","name","Date","toISOString","handleOpen","onScale","scale","parseFloat","value","handlePositionChange","position","handleSetEditorRef","editor","open","handleClose","handleCrop","state","urlBase64","getImageScaledToCanvas","toDataURL","imageData","preview","allowZoomOut","x","y","rotate","borderRadius","width","height","progress","isLoading","isError","render","timeout"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport ReactAvatarEditor from 'react-avatar-editor';\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Fade from '@mui/material/Fade';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport default class UploadAvatar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null /* Uploading file from the PC */,\r\n            imageName: null,\r\n            imageData: null,\r\n\r\n            preview: null,\r\n            open: false,\r\n            allowZoomOut: false,\r\n            position: {\r\n                x: 0.5,\r\n                y: 0.5,\r\n            },\r\n            scale: 1,\r\n            rotate: 0,\r\n            borderRadius: 200,\r\n            width: 250,\r\n            height: 250,\r\n            value: 1,\r\n            progress: 0,\r\n\r\n            isLoading: false,\r\n            isError: false,\r\n        };\r\n    }\r\n\r\n    // componentWillMount() {}\r\n    //\r\n    // loadInFirebase = () => {\r\n    //     let uploadTask;\r\n    //     // If image base64 format was passed as a parameter\r\n    //     if (this.state.imageData) {\r\n    //         uploadTask = storage\r\n    //             .ref(vacancies_logotypes)\r\n    //             .child(this.state.imageName)\r\n    //             .putString(this.state.imageData, 'data_url', {\r\n    //                 contentType: 'image/png',\r\n    //             });\r\n    //     } else {\r\n    //         // If image blob was passed as a parameter\r\n    //         uploadTask = storage\r\n    //             .ref(vacancies_logotypes)\r\n    //             .child(this.state.imageName)\r\n    //             .put(this.state.file);\r\n    //     }\r\n    //\r\n    //     uploadTask.on(\r\n    //         'state_changed',\r\n    //         async snapshot => {\r\n    //             // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n    //             this.setState({\r\n    //                 progress: (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n    //             });\r\n    //         },\r\n    //         err => {\r\n    //             console.log(err);\r\n    //             // A full list of error codes is available at\r\n    //             // https://firebase.google.com/docs/storage/web/handle-errors\r\n    //         },\r\n    //         complete => {\r\n    //             storage\r\n    //                 .ref(vacancies_logotypes)\r\n    //                 .child(this.state.imageName)\r\n    //                 .getDownloadURL()\r\n    //                 .then(url => {\r\n    //                     /* Send the obtained data to the parent component */\r\n    //                     this.props.onChange(this.state.imageName, url);\r\n    //                     this.handleClose();\r\n    //                 });\r\n    //         },\r\n    //     );\r\n    // };\r\n\r\n    handleNewImage = evt => {\r\n        this.setState({\r\n            file: evt.target.files[0],\r\n            imageName: `${evt.target.files[0].name}-${new Date().toISOString()}`,\r\n        });\r\n        if (evt.target.files[0]) {\r\n            this.handleOpen();\r\n        }\r\n    };\r\n\r\n    onScale = evt => {\r\n        this.setState({\r\n            scale: parseFloat(evt.target.value),\r\n        });\r\n    };\r\n\r\n    handlePositionChange = position => {\r\n        this.setState({\r\n            position,\r\n        });\r\n    };\r\n\r\n    handleSetEditorRef = editor => {\r\n        this.setState({\r\n            editor,\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n        });\r\n    };\r\n\r\n    handleCrop = async () => {\r\n        if (this.state.editor) {\r\n            const urlBase64 = this.state.editor.getImageScaledToCanvas().toDataURL();\r\n            await this.setState({\r\n                imageData: urlBase64,\r\n            });\r\n        }\r\n    };\r\n\r\n    // handleSubmit = async evt => {\r\n    //     evt.preventDefault();\r\n    //     /* If any perturbations was done under file */\r\n    //     await this.handleCrop();\r\n    //     /* Load the perturbed file into the firebase */\r\n    //     this.loadInFirebase();\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"apply-button\">\r\n                    <input\r\n                        id=\"contained-button-file\"\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        multiple\r\n                        onChange={this.handleNewImage}\r\n                        className=\"jss978\"\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\" className=\"upload-button-big\">\r\n                        <Button className=\"upload-button\" component=\"span\">\r\n                            <Avatar\r\n                                alt={this.props.imageName}\r\n                                src={this.props.imageData}\r\n                                className=\"avatar-picture-upload\"\r\n                            />\r\n                            <div className=\"upload-icon\">\r\n                                <div className=\"upload-icon-icon\" />\r\n                            </div>\r\n                        </Button>\r\n                    </label>\r\n                </div>\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title-apply\"\r\n                    aria-describedby=\"transition-modal-description-apply\"\r\n                    className=\"modal-upload\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.open}>\r\n                        <div className=\"row modal-paper-upload\">\r\n                            <ReactAvatarEditor\r\n                                image={this.state.file}\r\n                                scale={parseFloat(this.state.scale)}\r\n                                width={this.state.width}\r\n                                height={this.state.height}\r\n                                position={this.state.position}\r\n                                onPositionChange={this.handlePositionChange}\r\n                                rotate={parseFloat(this.state.rotate)}\r\n                                borderRadius={this.state.borderRadius}\r\n                                ref={this.handleSetEditorRef}\r\n                                className=\"editor-canvas\"\r\n                            />\r\n                            <div className=\"col-12 zoom-upload-div\">\r\n                                <input\r\n                                    name=\"scale\"\r\n                                    type=\"range\"\r\n                                    value={parseFloat(this.state.scale)}\r\n                                    min={this.state.allowZoomOut ? '0.1' : '1'}\r\n                                    max=\"2\"\r\n                                    step=\"0.01\"\r\n                                    onChange={this.onScale}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <form>\r\n                                    <button className=\"save-upload-btn\">\r\n                                        Зберегти\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"cancel-upload-btn\"\r\n                                        onClick={this.handleClose}\r\n                                    >\r\n                                        Відмінити\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}