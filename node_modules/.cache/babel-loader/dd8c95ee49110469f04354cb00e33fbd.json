{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\tester.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(name, email, password) {\n  const errors = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  if (name.length === 0) {\n    errors['name'] = \"Name can't be empty\";\n  }\n\n  if (email.length < 5) {\n    errors['email'] = \"Email should be at least 5 charcters long\";\n  }\n\n  if (password.length < 6) {\n    errors['password'] = \"Password should be at least 6 characters long\";\n  }\n\n  console.log(errors);\n  return errors;\n}\n\nexport default class Test extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {\n        name: '',\n        email: '',\n        password: ''\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const name = ReactDOM.findDOMNode(this._nameInput).value;\n    const email = ReactDOM.findDOMNode(this._emailInput).value;\n    const password = ReactDOM.findDOMNode(this._passwordInput).value;\n    const errors = validate(name, email, password);\n\n    if (errors.length > 0) {\n      this.setState({\n        errors\n      });\n      return;\n    } // submit the data...\n\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInput => this._nameInput = nameInput,\n        type: \"text\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", errors.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: emailInput => this._emailInput = emailInput,\n        type: \"text\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", errors.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passwordInput => this._passwordInput = passwordInput,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", errors.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/tester.js"],"names":["React","ReactDOM","validate","name","email","password","errors","length","console","log","Test","Component","constructor","state","handleSubmit","bind","e","preventDefault","findDOMNode","_nameInput","value","_emailInput","_passwordInput","setState","render","nameInput","emailInput","passwordInput"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nfunction validate(name, email, password) {\r\n    const errors = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    };\r\n\r\n    if (name.length === 0) {\r\n        errors['name']=\"Name can't be empty\";\r\n    }\r\n\r\n    if (email.length < 5) {\r\n        errors['email']=\"Email should be at least 5 charcters long\"\r\n    }\r\n\r\n    if (password.length < 6) {\r\n        errors['password']=\"Password should be at least 6 characters long\"\r\n    }\r\n\r\n    console.log(errors)\r\n    return errors;\r\n}\r\n\r\nexport default class Test extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const name = ReactDOM.findDOMNode(this._nameInput).value;\r\n        const email = ReactDOM.findDOMNode(this._emailInput).value;\r\n        const password = ReactDOM.findDOMNode(this._passwordInput).value;\r\n\r\n        const errors = validate(name, email, password);\r\n        if (errors.length > 0) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        // submit the data...\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    ref={nameInput => (this._nameInput = nameInput)}\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                />\r\n                {\r\n                    <p>Error: {errors.name}</p>\r\n                }\r\n                <input\r\n                    ref={emailInput => (this._emailInput = emailInput)}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                />\r\n                {\r\n                    <p>Error: {errors.email}</p>\r\n                }\r\n                <input\r\n                    ref={passwordInput => (this._passwordInput = passwordInput)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                {\r\n                    <p>Error: {errors.password}</p>\r\n                }\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}