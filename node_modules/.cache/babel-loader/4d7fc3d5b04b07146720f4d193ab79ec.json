{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\helpers\\\\tester.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = ({\n  type = \"checkbox\",\n  name,\n  checked = false,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    name: name,\n    checked: checked,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Checkbox;\nexport default function Test() {\n  _s();\n\n  const [checkedItems, setCheckedItems] = useState({});\n\n  const handleChange = event => {\n    setCheckedItems({ ...checkedItems,\n      [event.target.name]: event.target.checked\n    });\n    console.log(\"checkedItems: \", checkedItems);\n  };\n\n  const checkboxes = [{\n    name: \"check-box-1\",\n    key: \"checkBox1\",\n    label: \"Check Box 1\"\n  }, {\n    name: \"check-box-2\",\n    key: \"checkBox2\",\n    label: \"Check Box 2\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\",\n    children: checkboxes.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(Checkbox, {\n          className: \"custom-control-input\",\n          name: item.name,\n          checked: checkedItems[item.name],\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"SWtlc2PLI3tWeaONWDk00BvOa60=\");\n\n_c2 = Test;\n; // import { useState, useEffect } from \"react\";\n// import { useForm } from \"react-hook-form\";\n//\n// export default function Test() {\n//     const initialValues = {username: \"\", email: \"\", password: \"\"};\n//     const [formValues, setFormValues] = useState(initialValues);\n//     const [formErrors, setFormErrors] = useState({});\n//     const [isSubmit, setIsSubmit] = useState(false);\n//\n//     const handleChange = (e) => {\n//         const {name, value} = e.target;\n//         setFormValues({...formValues, [name]: value});\n//     }\n//\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         setFormErrors(validate(formValues));\n//         setIsSubmit(true);\n//     }\n//\n//     useEffect(() => {\n//         if(Object.keys(formErrors).length === 0 && isSubmit){\n//             console.log(formValues);\n//         }\n//     }, [formErrors]);\n//\n//     const validate = (values) =>{\n//         const errors = {};\n//         const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n//         if(!values.username){\n//             errors.username = \"username required\";\n//         }\n//         if(!values.email){\n//             errors.email = \"email required\";\n//         } else if (!regex.test(values.email)){\n//             errors.email = \"Цей email некоректний\"\n//         }\n//         if(!values.password){\n//             errors.password = \"password required\";\n//         } else if (values.password < 4){\n//             errors.password = \"Цей пароль занадто короткий\";\n//         }\n//         else if (values.password > 10){\n//             errors.password = \"Цей пароль занадто довгий\";\n//         }\n//         return errors;\n//     }\n//\n//     return (\n//         <div className=\"container\">\n//             <pre>{JSON.stringify(formValues, undefined, 2)}</pre>\n//             <form onSubmit={handleSubmit}>\n//                 <h1>Registration Form</h1>\n//                 <div className=\"ui divider\"></div>\n//                 <div className=\"ui form\">\n//                     <div className=\"field\">\n//                         <label>Username</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             className={\n//                                 (formErrors.username && isSubmit) ?\n//                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\n//                             }\n//                             placeholder=\"Username\"\n//                             value={formValues.username}\n//                             onChange={handleChange}\n//                         />\n//                     </div>\n//                     <p>{formErrors.username}</p>\n//                     <div className=\"field\">\n//                         <label>Email</label>\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             className={\n//                                 (formErrors.email && isSubmit) ?\n//                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\n//                             }\n//                             placeholder=\"Email\"\n//                             value={formValues.email}\n//                             onChange={handleChange}\n//                         />\n//                     </div>\n//                     <p>{formErrors.email}</p>\n//                     <div className=\"field\">\n//                         <label>Password</label>\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             placeholder=\"Password\"\n//                             className={\n//                                 (formErrors.password && isSubmit) ?\n//                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\n//                             }\n//                             value={formValues.password}\n//                             onChange={handleChange}\n//                         />\n//                     </div>\n//                     <p>{formErrors.password}</p>\n//                     <button className=\"fluid ui button blue\">Submit</button>\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/helpers/tester.js"],"names":["React","useState","ReactDOM","Checkbox","type","name","checked","onChange","Test","checkedItems","setCheckedItems","handleChange","event","target","console","log","checkboxes","key","label","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,UAAT;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,GAAG,KAArC;AAA4CC,EAAAA;AAA5C,CAAD,KAA4D;AAEzE,sBACI;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,IAAI,EAAEC,IAAzB;AAA+B,IAAA,OAAO,EAAEC,OAAxC;AAAiD,IAAA,QAAQ,EAAEC;AAA3D;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CALD;;KAAMJ,Q;AAON,eAAe,SAASK,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMU,YAAY,GAAGC,KAAK,IAAI;AAC1BF,IAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZ,OAACG,KAAK,CAACC,MAAN,CAAaR,IAAd,GAAqBO,KAAK,CAACC,MAAN,CAAaP;AAFtB,KAAD,CAAf;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,YAA9B;AACH,GAND;;AAQA,QAAMO,UAAU,GAAG,CACf;AACIX,IAAAA,IAAI,EAAE,aADV;AAEIY,IAAAA,GAAG,EAAE,WAFT;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADe,EAMf;AACIb,IAAAA,IAAI,EAAE,aADV;AAEIY,IAAAA,GAAG,EAAE,WAFT;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANe,CAAnB;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,iFAAf;AAAA,cACKF,UAAU,CAACG,GAAX,CAAeC,IAAI,iBAChB,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAA,mBACKA,IAAI,CAACf,IADV,eAEI,QAAC,QAAD;AACI,UAAA,SAAS,EAAC,sBADd;AAEI,UAAA,IAAI,EAAEe,IAAI,CAACf,IAFf;AAGI,UAAA,OAAO,EAAEI,YAAY,CAACW,IAAI,CAACf,IAAN,CAHzB;AAII,UAAA,QAAQ,EAAEM;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAYS,IAAI,CAACH,GAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzCuBT,I;;MAAAA,I;AAyCvsourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => {\r\n\r\n    return (\r\n        <input type={type} name={name} checked={checked} onChange={onChange} />\r\n    );\r\n};\r\n\r\nexport default function Test() {\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n\r\n    const handleChange = event => {\r\n        setCheckedItems({\r\n            ...checkedItems,\r\n            [event.target.name]: event.target.checked\r\n        });\r\n        console.log(\"checkedItems: \", checkedItems);\r\n    };\r\n\r\n    const checkboxes = [\r\n        {\r\n            name: \"check-box-1\",\r\n            key: \"checkBox1\",\r\n            label: \"Check Box 1\"\r\n        },\r\n        {\r\n            name: \"check-box-2\",\r\n            key: \"checkBox2\",\r\n            label: \"Check Box 2\"\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\">\r\n            {checkboxes.map(item => (\r\n                <React.Fragment>\r\n                    <label key={item.key}>\r\n                        {item.name}\r\n                        <Checkbox\r\n                            className=\"custom-control-input\"\r\n                            name={item.name}\r\n                            checked={checkedItems[item.name]}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </label>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n//\r\n// export default function Test() {\r\n//     const initialValues = {username: \"\", email: \"\", password: \"\"};\r\n//     const [formValues, setFormValues] = useState(initialValues);\r\n//     const [formErrors, setFormErrors] = useState({});\r\n//     const [isSubmit, setIsSubmit] = useState(false);\r\n//\r\n//     const handleChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setFormValues({...formValues, [name]: value});\r\n//     }\r\n//\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         setFormErrors(validate(formValues));\r\n//         setIsSubmit(true);\r\n//     }\r\n//\r\n//     useEffect(() => {\r\n//         if(Object.keys(formErrors).length === 0 && isSubmit){\r\n//             console.log(formValues);\r\n//         }\r\n//     }, [formErrors]);\r\n//\r\n//     const validate = (values) =>{\r\n//         const errors = {};\r\n//         const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n//         if(!values.username){\r\n//             errors.username = \"username required\";\r\n//         }\r\n//         if(!values.email){\r\n//             errors.email = \"email required\";\r\n//         } else if (!regex.test(values.email)){\r\n//             errors.email = \"Цей email некоректний\"\r\n//         }\r\n//         if(!values.password){\r\n//             errors.password = \"password required\";\r\n//         } else if (values.password < 4){\r\n//             errors.password = \"Цей пароль занадто короткий\";\r\n//         }\r\n//         else if (values.password > 10){\r\n//             errors.password = \"Цей пароль занадто довгий\";\r\n//         }\r\n//         return errors;\r\n//     }\r\n//\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <pre>{JSON.stringify(formValues, undefined, 2)}</pre>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <h1>Registration Form</h1>\r\n//                 <div className=\"ui divider\"></div>\r\n//                 <div className=\"ui form\">\r\n//                     <div className=\"field\">\r\n//                         <label>Username</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             className={\r\n//                                 (formErrors.username && isSubmit) ?\r\n//                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n//                             }\r\n//                             placeholder=\"Username\"\r\n//                             value={formValues.username}\r\n//                             onChange={handleChange}\r\n//                         />\r\n//                     </div>\r\n//                     <p>{formErrors.username}</p>\r\n//                     <div className=\"field\">\r\n//                         <label>Email</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             className={\r\n//                                 (formErrors.email && isSubmit) ?\r\n//                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n//                             }\r\n//                             placeholder=\"Email\"\r\n//                             value={formValues.email}\r\n//                             onChange={handleChange}\r\n//                         />\r\n//                     </div>\r\n//                     <p>{formErrors.email}</p>\r\n//                     <div className=\"field\">\r\n//                         <label>Password</label>\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             placeholder=\"Password\"\r\n//                             className={\r\n//                                 (formErrors.password && isSubmit) ?\r\n//                                     \"input-field height-unset error-border\" : \"input-field height-unset\"\r\n//                             }\r\n//                             value={formValues.password}\r\n//                             onChange={handleChange}\r\n//                         />\r\n//                     </div>\r\n//                     <p>{formErrors.password}</p>\r\n//                     <button className=\"fluid ui button blue\">Submit</button>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }"]},"metadata":{},"sourceType":"module"}