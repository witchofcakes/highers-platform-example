{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\tester.js\";\nimport InfiniteLoader from 'react-infinite-loader';\nimport ReactDOM from 'react-dom';\nimport React, { Component, PropTypes } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TestComponent extends Component {\n  componentDidMount() {\n    this.loadItems();\n  }\n\n  loadItems() {\n    /* just simulating a load of more items from an api here */\n    setTimeout(() => {\n      let items = this.state.items.slice();\n      items = items.concat(this.getItems());\n      this.setState({\n        items: items\n      });\n    }, 1000);\n  }\n\n  handleVisit() {\n    this.loadItems();\n  }\n\n  getItems() {\n    let items = [];\n\n    for (var i = 0; i < 10; i++) {\n      items.push({\n        name: 'An item'\n      });\n    }\n\n    return items;\n  }\n\n  renderCards() {\n    const {\n      items\n    } = this.state;\n    const cards = items.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n    return cards;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderCards(), /*#__PURE__*/_jsxDEV(InfiniteLoader, {\n        onVisited: () => this.handleVisit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/tester.js"],"names":["InfiniteLoader","ReactDOM","React","Component","PropTypes","TestComponent","componentDidMount","loadItems","setTimeout","items","state","slice","concat","getItems","setState","handleVisit","i","push","name","renderCards","cards","map","item","render"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAEjDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAG;AACR;AACAC,IAAAA,UAAU,CAAE,MAAM;AACd,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,KAAjB,EAAZ;AACAF,MAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAa,KAAKC,QAAL,EAAb,CAAR;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACH,KAJS,EAIP,IAJO,CAAV;AAKH;;AAEDM,EAAAA,WAAW,GAAI;AACX,SAAKR,SAAL;AACH;;AAEDM,EAAAA,QAAQ,GAAG;AACP,QAAIJ,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBP,MAAAA,KAAK,CAACQ,IAAN,CAAW;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAX;AACH;;AACD,WAAOT,KAAP;AACH;;AAEDU,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAMU,KAAK,GAAGX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAON,CAAP,KAAa;AACjC,0BACI;AAAA,+BAAa;AAAA,oBAAKM,IAAI,CAACJ;AAAV;AAAA;AAAA;AAAA;AAAA;AAAb,SAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJa,CAAd;AAKA,WAAOI,KAAP;AACH;;AAEDG,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,iBACM,KAAKJ,WAAL,EADN,eAEI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAG,MAAM,KAAKJ,WAAL;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA5CgD","sourcesContent":["import InfiniteLoader from 'react-infinite-loader'\r\nimport ReactDOM from 'react-dom'\r\nimport React, { Component, PropTypes } from 'react'\r\n\r\nexport default class TestComponent extends Component {\r\n\r\n    componentDidMount() {\r\n        this.loadItems()\r\n    }\r\n\r\n    loadItems() {\r\n        /* just simulating a load of more items from an api here */\r\n        setTimeout( () => {\r\n            let items = this.state.items.slice()\r\n            items = items.concat(this.getItems())\r\n            this.setState({ items: items })\r\n        }, 1000)\r\n    }\r\n\r\n    handleVisit () {\r\n        this.loadItems()\r\n    }\r\n\r\n    getItems() {\r\n        let items = []\r\n        for(var i = 0; i < 10; i++) {\r\n            items.push({ name: 'An item' })\r\n        }\r\n        return items\r\n    }\r\n\r\n    renderCards() {\r\n        const { items } = this.state\r\n        const cards = items.map((item, i) => {\r\n            return (\r\n                <div key={i}><h3>{item.name}</h3></div>\r\n            )\r\n        })\r\n        return cards\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                { this.renderCards() }\r\n                <InfiniteLoader onVisited={ () => this.handleVisit() } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}