{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\helpers\\\\checkboxGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = ({\n  type = \"checkbox\",\n  name,\n  checked = false,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    className: \"custom-control-input\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Checkbox;\nexport default function CheckboxGroup(props) {\n  _s();\n\n  const [checkedItems, setCheckedItems] = useState({});\n\n  const handleChange = event => {\n    setCheckedItems({ ...checkedItems,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.checkboxes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: item.name\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: item.name,\n        checked: checkedItems[item.name],\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxGroup, \"SWtlc2PLI3tWeaONWDk00BvOa60=\");\n\n_c2 = CheckboxGroup;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c2, \"CheckboxGroup\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/helpers/checkboxGroup.js"],"names":["React","useState","ReactDOM","Checkbox","type","name","checked","onChange","CheckboxGroup","props","checkedItems","setCheckedItems","handleChange","event","target","checkboxes","map","item","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,UAAT;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,GAAG,KAArC;AAA4CC,EAAAA;AAA5C,CAAD,KAA4D;AACzE,sBACI;AACI,IAAA,IAAI,EAAEH,IADV;AAEI,IAAA,IAAI,EAAEC,IAFV;AAGI,IAAA,OAAO,EAAEC,OAHb;AAII,IAAA,QAAQ,EAAEC,QAJd;AAKI,IAAA,SAAS,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMJ,Q;AAYN,eAAe,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMW,YAAY,GAAGC,KAAK,IAAI;AAC1BF,IAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZ,OAACG,KAAK,CAACC,MAAN,CAAaT,IAAd,GAAqBQ,KAAK,CAACC,MAAN,CAAaR;AAFtB,KAAD,CAAf;AAIH,GALD;;AAOA,sBACI;AAAA,cACKG,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAqBC,IAAI,iBACtB;AAAK,MAAA,SAAS,EAAC,iFAAf;AAAA,8BACI;AAAA,kBACKA,IAAI,CAACZ;AADV,SAAYY,IAAI,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,QAAD;AACI,QAAA,IAAI,EAAED,IAAI,CAACZ,IADf;AAEI,QAAA,OAAO,EAAEK,YAAY,CAACO,IAAI,CAACZ,IAAN,CAFzB;AAGI,QAAA,QAAQ,EAAEO;AAHd;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA1BuBJ,a;;MAAAA,a;AA0BvB","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => {\r\n    return (\r\n        <input\r\n            type={type}\r\n            name={name}\r\n            checked={checked}\r\n            onChange={onChange}\r\n            className=\"custom-control-input\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default function CheckboxGroup(props) {\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n\r\n    const handleChange = event => {\r\n        setCheckedItems({\r\n            ...checkedItems,\r\n            [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.checkboxes.map(item => (\r\n                <div className=\"checkbox-apply-vacancies custom-control margin-bottom-5 custom-checkbox mr-sm-2\">\r\n                    <label key={item.key}>\r\n                        {item.name}\r\n                    </label>\r\n                    <Checkbox\r\n                        name={item.name}\r\n                        checked={checkedItems[item.name]}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}