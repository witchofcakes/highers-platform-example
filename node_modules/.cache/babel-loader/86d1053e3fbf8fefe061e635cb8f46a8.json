{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\tester.js\",\n    _s = $RefreshSig$();\n\nimport InfiniteLoader from 'react-infinite-loader';\nimport ReactDOM from 'react-dom';\nimport React, { Component, PropTypes, useState, useEffect } from 'react';\nimport VacancyCard from \"./vacancyCard\";\nimport deloitte from \"../images/deloitte.png\";\nimport procredit from \"../images/procredit.png\";\nimport fozzy from \"../images/img.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestComponent() {\n  _s();\n\n  // constructor(props) {\n  //     super(props);\n  //     this.state = { items: []};\n  // }\n  //\n  const [state, setState] = useState({\n    vacancies: [{\n      id: 1,\n      title: \"Менеджер з комунікацій\",\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: deloitte\n    }, {\n      id: 2,\n      title: 'Менеджер з комунікацій',\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: procredit\n    }, {\n      id: 3,\n      title: 'Менеджер з комунікацій',\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: fozzy\n    }, {\n      id: 4,\n      title: \"Менеджер з комунікацій\",\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: deloitte\n    }, {\n      id: 5,\n      title: 'Менеджер з комунікацій',\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: procredit\n    }, {\n      id: 6,\n      title: 'Менеджер з комунікацій',\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: fozzy\n    }, {\n      id: 7,\n      title: \"Менеджер з комунікацій\",\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: deloitte\n    }, {\n      id: 8,\n      title: 'Менеджер з комунікацій',\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: procredit\n    }, {\n      id: 9,\n      title: 'Менеджер з комунікацій',\n      description: \" Задачі: встановлення партнерств, комунікація з клієнтами\",\n      company: \"Deloitte\",\n      logo: fozzy\n    }]\n  });\n  useEffect(() => {\n    loadItems();\n    console.log(\"effect\");\n  });\n\n  function loadItems() {\n    /* just simulating a load of more items from an api here */\n    setTimeout(() => {\n      let items = state.vacancies.slice();\n      items = items.concat(getItems());\n      setState({\n        vacancies: items\n      });\n    }, 1000);\n  }\n\n  function handleVisit() {\n    loadItems();\n  }\n\n  function getItems() {\n    let items = [];\n\n    for (var i = 0; i < 12; i++) {\n      items.push({\n        title: 'An item'\n      });\n    }\n\n    return items;\n  }\n\n  function renderCards() {\n    const cards = state.vacancies.map(function (vacancy, i) {\n      return /*#__PURE__*/_jsxDEV(VacancyCard, {\n        title: vacancy.title,\n        description: vacancy.description,\n        company: vacancy.company,\n        logo: vacancy.logo\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    });\n    return cards;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderCards(), /*#__PURE__*/_jsxDEV(InfiniteLoader, {\n      onVisited: () => handleVisit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TestComponent, \"5hogdpXchQ+SwTx/EM1YRUB0VzI=\");\n\n_c = TestComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/tester.js"],"names":["InfiniteLoader","ReactDOM","React","Component","PropTypes","useState","useEffect","VacancyCard","deloitte","procredit","fozzy","TestComponent","state","setState","vacancies","id","title","description","company","logo","loadItems","console","log","setTimeout","items","slice","concat","getItems","handleVisit","i","push","renderCards","cards","map","vacancy"],"mappings":"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","sourcesContent":["import InfiniteLoader from 'react-infinite-loader'\r\nimport ReactDOM from 'react-dom'\r\nimport React, { Component, PropTypes, useState, useEffect } from 'react'\r\n\r\nimport VacancyCard from \"./vacancyCard\";\r\nimport deloitte from \"../images/deloitte.png\"\r\nimport procredit from \"../images/procredit.png\"\r\nimport fozzy from \"../images/img.png\"\r\n\r\nexport default function TestComponent() {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = { items: []};\r\n    // }\r\n    //\r\n    const [state, setState] = useState({\r\n        vacancies: [\r\n            {id: 1, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n            {id: 2, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n            {id: 3, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n            {id: 4, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n            {id: 5, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n            {id: 6, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n            {id: 7, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n            {id: 8, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n            {id: 9, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n        ],\r\n    })\r\n\r\n    useEffect(() => {\r\n        loadItems()\r\n        console.log(\"effect\")\r\n    });\r\n\r\n    function loadItems() {\r\n        /* just simulating a load of more items from an api here */\r\n        setTimeout( () => {\r\n            let items = state.vacancies.slice()\r\n            items = items.concat(getItems())\r\n            setState({ vacancies: items })\r\n        }, 1000)\r\n    }\r\n\r\n    function handleVisit () {\r\n        loadItems()\r\n    }\r\n\r\n    function getItems() {\r\n        let items = []\r\n        for(var i = 0; i < 12; i++) {\r\n            items.push({ title: 'An item' })\r\n        }\r\n        return items\r\n    }\r\n\r\n    function renderCards() {\r\n        const cards = state.vacancies.map(function(vacancy, i){\r\n            return (\r\n                <VacancyCard\r\n                    key={i}\r\n                    title={vacancy.title}\r\n                    description={vacancy.description}\r\n                    company={vacancy.company}\r\n                    logo={vacancy.logo}\r\n                />\r\n            )\r\n        })\r\n        return cards\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { renderCards() }\r\n                <InfiniteLoader onVisited={ () => handleVisit() } />\r\n            </div>\r\n        )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}