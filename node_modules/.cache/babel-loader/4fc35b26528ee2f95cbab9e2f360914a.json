{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanya\\\\WebstormProjects\\\\platform\\\\client\\\\src\\\\components\\\\vacancy\\\\vacancies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Popover from '@mui/material/Popover';\nimport { X } from 'react-feather';\nimport { useMediaQuery } from 'react-responsive';\nimport Switch from \"./switch\";\nimport VacancyCard from \"./vacancyCard\";\nimport deloitte from \"../../images/deloitte.png\";\nimport procredit from \"../../images/procredit.png\";\nimport fozzy from \"../../images/img.png\";\nimport { Sliders } from \"react-feather\";\nimport Filters from \"./filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Vacancies() {\n  _s();\n\n  const [state, setState] = useState({\n    isFilterOpen: false\n  });\n  const [vacancies, setVacancies] = useState([]);\n  const [page, setPage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    const loadVacancies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`https://randomuser.me/api/?page=${page}&results=10`);\n        setVacancies(vacancies => [...vacancies, ...response.data.results]);\n        setErrorMsg('');\n      } catch (error) {\n        setErrorMsg('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadVacancies();\n  }, [page]);\n\n  const loadMore = () => {\n    setPage(page => page + 1);\n  };\n\n  const isBigScreen = useMediaQuery({\n    query: '(min-width: 1200px)'\n  });\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 992px)'\n  });\n  const isMobileOrTablet = useMediaQuery({\n    query: '(max-width: 992px)'\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 490px)'\n  });\n\n  function openFilterButton() {\n    setState({\n      isFilterOpen: !state.isFilterOpen\n    });\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null); // {id: 1, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\n    // {id: 2, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\n    // {id: 3, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\n    // {id: 4, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\n    // {id: 5, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\n    // {id: 6, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\n    // {id: 7, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\n    // {id: 8, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\n    // {id: 9, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container-vacancies\",\n    children: isDesktop && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        opportunitites: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vacancies-column-width\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employer-switch-container\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), vacancies.map(function (vacancy, i) {\n          return /*#__PURE__*/_jsxDEV(VacancyCard, {\n            title: vacancy.name.first,\n            description: vacancy.name.last,\n            company: vacancy.email,\n            logo: vacancy.email\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this);\n        }), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"load-more\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadMore,\n            className: \"btn-grad\",\n            children: isLoading ? 'Loading...' : 'Load More'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vacancies-empty-column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Vacancies, \"Rdw651ygDXdhjR7PGXk5bq8N+KQ=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = Vacancies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vacancies\");","map":{"version":3,"sources":["C:/Users/tanya/WebstormProjects/platform/client/src/components/vacancy/vacancies.js"],"names":["React","useState","useEffect","axios","Popover","X","useMediaQuery","Switch","VacancyCard","deloitte","procredit","fozzy","Sliders","Filters","Vacancies","state","setState","isFilterOpen","vacancies","setVacancies","page","setPage","isLoading","setIsLoading","errorMsg","setErrorMsg","loadVacancies","response","get","data","results","error","loadMore","isBigScreen","query","isDesktop","isMobileOrTablet","isMobile","openFilterButton","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","map","vacancy","i","name","first","last","email"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport Popover from '@mui/material/Popover';\r\nimport {X} from 'react-feather'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Switch from \"./switch\";\r\nimport VacancyCard from \"./vacancyCard\";\r\nimport deloitte from \"../../images/deloitte.png\"\r\nimport procredit from \"../../images/procredit.png\"\r\nimport fozzy from \"../../images/img.png\"\r\nimport {Sliders} from \"react-feather\"\r\nimport Filters from \"./filters\";\r\n\r\nexport default function Vacancies() {\r\n\r\n    const [state, setState] = useState({\r\n        isFilterOpen: false,\r\n    })\r\n\r\n    const [vacancies, setVacancies] = useState([]);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loadVacancies = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await axios.get(\r\n                    `https://randomuser.me/api/?page=${page}&results=10`\r\n                );\r\n                setVacancies((vacancies) => [...vacancies, ...response.data.results]);\r\n                setErrorMsg('');\r\n            } catch (error) {\r\n                setErrorMsg('Error while loading data. Try again later.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        loadVacancies();\r\n    }, [page]);\r\n\r\n    const loadMore = () => {\r\n        setPage((page) => page + 1);\r\n    };\r\n\r\n    const isBigScreen = useMediaQuery({\r\n        query: '(min-width: 1200px)'\r\n    })\r\n\r\n    const isDesktop = useMediaQuery({\r\n        query: '(min-width: 992px)'\r\n    })\r\n    const isMobileOrTablet = useMediaQuery({\r\n        query: '(max-width: 992px)'\r\n    })\r\n    const isMobile = useMediaQuery({\r\n        query: '(max-width: 490px)'\r\n    })\r\n\r\n    function openFilterButton(){\r\n        setState({ isFilterOpen: !state.isFilterOpen });\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        // {id: 1, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n        // {id: 2, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n        // {id: 3, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n        // {id: 4, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n        // {id: 5, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n        // {id: 6, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n        // {id: 7, title: \"Менеджер з комунікацій\", description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: deloitte},\r\n        // {id: 8, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: procredit},\r\n        // {id: 9, title: 'Менеджер з комунікацій', description: \" Задачі: встановлення партнерств, комунікація з клієнтами\", company: \"Deloitte\", logo: fozzy},\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <section className=\"container-vacancies\">\r\n\r\n            {\r\n                isDesktop &&\r\n                    <React.Fragment>\r\n                        <Filters opportunitites={false}/>\r\n                        <div className=\"vacancies-column-width\">\r\n                            <div className=\"employer-switch-container\">\r\n                                <Switch/>\r\n                            </div>\r\n                            {vacancies.map(function(vacancy, i){\r\n                                return (\r\n                                    <VacancyCard\r\n                                        key={i}\r\n                                        title={vacancy.name.first}\r\n                                        description={vacancy.name.last}\r\n                                        company={vacancy.email}\r\n                                        logo={vacancy.email}\r\n                                    />\r\n                                )\r\n                            })}\r\n                            {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n                            <div className=\"load-more\">\r\n                                <button onClick={loadMore} className=\"btn-grad\">\r\n                                    {isLoading ? 'Loading...' : 'Load More'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"vacancies-empty-column\"></div>\r\n\r\n                    </React.Fragment>\r\n            }\r\n\r\n            {/*{*/}\r\n            {/*    isMobileOrTablet &&*/}\r\n            {/*    <React.Fragment>*/}\r\n            {/*        <div className=\"vacancies-column-width\">*/}\r\n            {/*            <div className=\"employer-switch-container\">*/}\r\n            {/*                <Switch/>*/}\r\n            {/*            </div>*/}\r\n\r\n            {/*                {state.vacancies.map(function(vacancy, i){*/}\r\n            {/*                    return (*/}\r\n            {/*                        <VacancyCard*/}\r\n            {/*                            key={i}*/}\r\n            {/*                            title={vacancy.title}*/}\r\n            {/*                            description={vacancy.description}*/}\r\n            {/*                            company={vacancy.company}*/}\r\n            {/*                            logo={vacancy.logo}*/}\r\n            {/*                        />*/}\r\n            {/*                    )*/}\r\n            {/*                })}*/}\r\n\r\n            {/*            <div className=\"filter-button-main-mobile\">*/}\r\n            {/*                <button aria-describedby={id} onClick={handleClick} className=\"filter-button-vacancies-sticky\">*/}\r\n            {/*                    <Sliders size={22} color={\"#ebebec\"} className={\"filter-icon-margin\"}/>*/}\r\n            {/*                    Фільтри*/}\r\n            {/*                </button>*/}\r\n            {/*            </div>*/}\r\n\r\n            {/*            /!*{*!/*/}\r\n            {/*            /!*    state.isFilterOpen &&*!/*/}\r\n            {/*            /!*        <div className=\"filters-div-vacancies-mobile\">*!/*/}\r\n            {/*                        <Popover*/}\r\n            {/*                            id={id}*/}\r\n            {/*                            open={open}*/}\r\n            {/*                            anchorEl={anchorEl}*/}\r\n            {/*                            onClose={handleClose}*/}\r\n            {/*                            anchorOrigin={{*/}\r\n            {/*                                vertical: 'top',*/}\r\n            {/*                                horizontal: 'center',*/}\r\n            {/*                            }}*/}\r\n            {/*                            transformOrigin={{*/}\r\n            {/*                                vertical: 'bottom',*/}\r\n            {/*                                horizontal: 'center',*/}\r\n            {/*                            }}*/}\r\n            {/*                        >*/}\r\n            {/*                            <div className=\"filters-container-sticky\">*/}\r\n            {/*                                <div className=\"head-filter-popup\">*/}\r\n            {/*                                    <p className=\"filters-title-text\">*/}\r\n            {/*                                        <Sliders size={22} color={\"var(--gray)\"} className={\"filter-icon-margin\"}/>*/}\r\n            {/*                                        Фільтри*/}\r\n            {/*                                    </p>*/}\r\n            {/*                                    <div className=\"close-icon-div\" onClick={handleClose}>*/}\r\n            {/*                                        <X size={20} color={\"#212529\"}/>*/}\r\n            {/*                                    </div>*/}\r\n            {/*                                </div>*/}\r\n            {/*                                <Filters/>*/}\r\n            {/*                            </div>*/}\r\n            {/*                        </Popover>*/}\r\n            {/*                        /!*<Filters/>*!/*/}\r\n            {/*                        /!*<div>*!/*/}\r\n            {/*                        /!*    <button>hello</button>*!/*/}\r\n            {/*                        /!*</div>*!/*/}\r\n            {/*            /!*        </div>*!/*/}\r\n            {/*            /!*}*!/*/}\r\n\r\n\r\n\r\n            {/*        </div>*/}\r\n            {/*    </React.Fragment>*/}\r\n            {/*}*/}\r\n\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}